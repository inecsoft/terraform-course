import * as $internal from "@winglang/sdk/lib/core/types"
import { std } from "@winglang/sdk"
import { cloud } from "@winglang/sdk"
import { fs } from "@winglang/sdk"
import * as utils from "./preflight.utils-1.cjs";
export interface AppProps {
  readonly projectPath: string;
  readonly localPort?: (number) | undefined;
  readonly buildDir?: (string) | undefined;
  readonly startCommand?: (string) | undefined;
  readonly buildCommand?: (string) | undefined;
  readonly useBuildCommand?: (boolean) | undefined;
  readonly domain?: (cloud.Domain) | undefined;
}
export interface IApp
{
  readonly getUrl: () => string;
  readonly addEnvironment: (key: string, value: string) => void;
}
export interface IApp$Inflight
{
}
export class AppBase extends std.Resource
{
  constructor(scope: $internal.Construct, id: string, props: AppProps);
  [$internal.INFLIGHT_SYMBOL]?: AppBase$Inflight;
  addEnvironment: (key: string, value: string) => void;
}
export class AppBase$Inflight
{
  constructor(props: AppProps);
}