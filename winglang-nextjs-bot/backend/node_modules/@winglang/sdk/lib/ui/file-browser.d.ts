import { Construct } from "constructs";
import { VisualComponent } from "./base";
import { UIComponent } from "../core";
import { INFLIGHT_SYMBOL } from "../core/types";
import { IInflight } from "../std";
/**
 * Global identifier for `FileBrowser`.
 */
export declare const FILE_BROWSER_FQN: string;
/**
 * File browser handlers.
 */
export interface FileBrowserHandlers {
    /**
     * Handler for putting a file.
     */
    readonly put: IFileBrowserPutHandler;
    /**
     * Handler for deleting a file.
     */
    readonly delete: IFileBrowserDeleteHandler;
    /**
     * Handler for getting a file.
     */
    readonly get: IFileBrowserGetHandler;
    /**
     * Handler for listing files.
     */
    readonly list: IFileBrowserListHandler;
}
/**
 * A file browser can be used to browse files.
 * @noinflight
 */
export declare class FileBrowser extends VisualComponent {
    /**
     * Creates a new ui.FileBrowser instance through the app.
     * @internal
     */
    static _newFileBrowser(scope: Construct, id: string, label: string, handlers: FileBrowserHandlers): FileBrowser;
    private readonly getFn;
    private readonly putFn;
    private readonly deleteFn;
    private readonly listFn;
    private readonly label;
    constructor(scope: Construct, id: string, label: string, handlers: FileBrowserHandlers);
    /** @internal */
    _toUIComponent(): UIComponent;
    /** @internal */
    _toInflight(): string;
}
/**
 * A resource with an inflight "handle" method that can be passed to
 * `IFileBrowser`.
 *
 * @inflight `@winglang/sdk.ui.IFileBrowserPutHandlerClient`
 */
export interface IFileBrowserPutHandler extends IInflight {
    /** @internal */
    [INFLIGHT_SYMBOL]?: IFileBrowserPutHandlerClient["handle"];
}
/**
 * A resource with an inflight "handle" method that can be passed to
 * `IFileBrowser`.
 *
 * @inflight `@winglang/sdk.ui.IFileBrowserGetHandlerClient`
 */
export interface IFileBrowserGetHandler extends IInflight {
    /** @internal */
    [INFLIGHT_SYMBOL]?: IFileBrowserGetHandlerClient["handle"];
}
/**
 * A resource with an inflight "handle" method that can be passed to
 * `IFileBrowser`.
 *
 * @inflight `@winglang/sdk.ui.IFileBrowserListHandlerClient`
 */
export interface IFileBrowserListHandler extends IInflight {
    /** @internal */
    [INFLIGHT_SYMBOL]?: IFileBrowserListHandlerClient["handle"];
}
/**
 * A resource with an inflight "handle" method that can be passed to
 * `IFileBrowser`.
 *
 * @inflight `@winglang/sdk.ui.IFileBrowserDeleteHandlerClient`
 */
export interface IFileBrowserDeleteHandler extends IInflight {
    /** @internal */
    [INFLIGHT_SYMBOL]?: IFileBrowserDeleteHandlerClient["handle"];
}
/**
 * Inflight client for `IFileBrowserVoidHandler`.
 */
export interface IFileBrowserPutHandlerClient {
    /**
     * Function that performs an action.
     * @inflight
     */
    handle(fileName: string, fileContent: string): Promise<void>;
}
/**
 * Inflight client for `IFileBrowserGetHandler`.
 */
export interface IFileBrowserGetHandlerClient {
    /**
     * Function that performs an action.
     * @inflight
     */
    handle(fileName: string): Promise<string>;
}
/**
 * Inflight client for `IFileBrowserDeleteHandler`.
 */
export interface IFileBrowserDeleteHandlerClient {
    /**
     * Function that performs an action.
     * @inflight
     */
    handle(fileName: string): Promise<void>;
}
/**
 * Inflight client for `IFileBrowserListHandler`.
 */
export interface IFileBrowserListHandlerClient {
    /**
     * Function that performs an action.
     * @inflight
     */
    handle(): Promise<string[]>;
}
