import { ApplicationInsights } from "../.gen/providers/azurerm/application-insights";
import { LogAnalyticsWorkspace } from "../.gen/providers/azurerm/log-analytics-workspace";
import { ResourceGroup } from "../.gen/providers/azurerm/resource-group";
import { ServicePlan } from "../.gen/providers/azurerm/service-plan";
import { StorageAccount } from "../.gen/providers/azurerm/storage-account";
import { AppProps } from "../core";
import { CdktfApp } from "../shared-tf/app";
/**
 * Azure app props
 */
export interface AzureAppProps extends AppProps {
    /** Location for resources to be deployed to */
    readonly location: string;
}
/**
 * An app that knows how to synthesize constructs into a Terraform configuration
 * for Azure resources.
 */
export declare class App extends CdktfApp {
    /**
     * The location context of the App
     * @link https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/resource_group#location
     * */
    readonly location: string;
    readonly _target = "tf-azure";
    private _resourceGroup?;
    private _storageAccount?;
    private _servicePlan?;
    private _applicationInsights?;
    private _logAnalyticsWorkspace?;
    constructor(props: AzureAppProps);
    get logAnalyticsWorkspace(): LogAnalyticsWorkspace;
    get applicationInsights(): ApplicationInsights;
    /**
     * Get resource group using lazy initialization
     */
    get resourceGroup(): ResourceGroup;
    /**
     * Get storage account using lazy initialization
     */
    get storageAccount(): StorageAccount;
    /**
     * Get service plan using lazy initialization
     */
    get servicePlan(): ServicePlan;
    protected typeForFqn(fqn: string): any;
}
