import { App } from "./app";
import { Colors } from "../ui/colors";
export declare const TREE_FILE_PATH = "tree.json";
/**
 * A node in the construct tree.
 */
export interface ConstructTreeNode {
    /**
     * The ID of the node. Is part of the `path`.
     */
    readonly id: string;
    /**
     * The path of the node.
     */
    readonly path: string;
    /**
     * The child nodes.
     */
    readonly children?: {
        [key: string]: ConstructTreeNode;
    };
    /**
     * The node attributes.
     */
    readonly attributes?: {
        [key: string]: any;
    };
    /**
     * Information on the construct class that led to this node, if available.
     */
    readonly constructInfo?: ConstructInfo;
    /**
     * Information on how to display this node in the UI.
     */
    readonly display?: DisplayInfo;
}
/**
 * Information on how to display a construct in the UI.
 */
export interface DisplayInfo {
    /**
     * Title of the resource.
     * @default - The type and/or identifier of the resource
     */
    readonly title?: string;
    /**
     * Description of the resource.
     * @default - No description
     */
    readonly description?: string;
    /**
     * Whether the resource should be hidden from the UI.
     * @default false (visible)
     */
    readonly hidden?: boolean;
    /**
     * The source file or library where the construct was defined.
     * @default - no source information
     */
    readonly sourceModule?: string;
    /**
     * UI components to display for this resource.
     * @default - no UI components
     */
    readonly ui?: any[];
    /**
     * The color of the resource in the UI.
     */
    readonly color?: Colors;
    /**
     * The icon of the resource in the UI.
     */
    readonly icon?: string;
    /**
     * Whether the node is expanded or collapsed by default in the UI.
     * By default, nodes are collapsed. Set this to `true` if you want the node to be expanded by default.
     *
     * @default false
     */
    readonly expanded?: boolean;
}
/** @internal */
export type UIComponent = UIField | UISection | UIButton | UIHttpClient | UIFileBrowser;
/** @internal */
export interface UIField {
    readonly kind: "field";
    readonly label: string;
    /** The construct path to a cloud.Function */
    readonly handler: string;
    readonly refreshRate: number | undefined;
    readonly link?: boolean;
}
/** @internal */
export interface UIButton {
    readonly kind: "button";
    readonly label: string;
    /** The construct path to a cloud.Function */
    readonly handler: string;
}
/** @internal */
export interface UISection {
    readonly kind: "section";
    readonly label?: string;
    readonly children: UIComponent[];
}
/** @internal */
export interface UIHttpClient {
    readonly kind: "http-client";
    readonly label: string;
    readonly getUrlHandler: string;
    readonly getApiSpecHandler: string;
}
/** @internal */
export interface UIFileBrowser {
    readonly kind: "file-browser";
    readonly label: string;
    readonly putHandler: string;
    readonly deleteHandler: string;
    readonly getHandler: string;
    readonly listHandler: string;
}
/**
 * The construct tree.
 */
export interface ConstructTree {
    /**
     * The construct tree version.
     */
    readonly version: string;
    /**
     * The root node.
     */
    readonly tree: ConstructTreeNode;
}
/**
 * Source information on a construct (class fqn and version).
 */
export interface ConstructInfo {
    /**
     * Fully qualified class name.
     */
    readonly fqn: string;
    /**
     * Version of the module.
     */
    readonly version: string;
}
export declare function synthesizeTree(app: App, outdir: string): void;
