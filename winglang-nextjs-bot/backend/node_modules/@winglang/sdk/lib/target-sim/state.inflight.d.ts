import { StateSchema } from "./schema-resources";
import { IStateClient } from "./state";
import { ISimulatorContext, ISimulatorResourceInstance, UpdatePlan } from "../simulator";
import { Json } from "../std";
export declare class State implements IStateClient, ISimulatorResourceInstance {
    private _context;
    constructor(_props: StateSchema);
    private get context();
    init(context: ISimulatorContext): Promise<Record<string, any>>;
    cleanup(): Promise<void>;
    save(): Promise<void>;
    plan(): Promise<UpdatePlan>;
    set(key: string, value: any): Promise<void>;
    get(key: string): Promise<any>;
    tryGet(key: string): Promise<Json | undefined>;
}
