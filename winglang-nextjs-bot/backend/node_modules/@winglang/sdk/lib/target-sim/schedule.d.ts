import { Construct } from "constructs";
import { ISimulatorResource } from "./resource";
import * as cloud from "../cloud";
import { ToSimulatorOutput } from "../simulator";
import { IInflightHost } from "../std";
/**
 * Simulator implementation of `cloud.Schedule`.
 *
 * @inflight `@winglang/sdk.cloud.IScheduleClient`
 */
export declare class Schedule extends cloud.Schedule implements ISimulatorResource {
    private readonly cronExpression;
    private readonly policy;
    constructor(scope: Construct, id: string, props?: cloud.ScheduleProps);
    onTick(inflight: cloud.IScheduleOnTickHandler, props?: cloud.ScheduleOnTickOptions): cloud.Function;
    toSimulator(): ToSimulatorOutput;
    /** @internal */
    _toInflight(): string;
    onLift(host: IInflightHost, ops: string[]): void;
}
/**
 * Utility class to work with schedule on tick handlers.
 */
export declare class ScheduleOnTickHandler {
    /**
     * Converts a `cloud.IScheduleOnTickHandler` to a `cloud.IFunctionHandler`.
     * @param handler the handler to convert
     * @returns the function handler
     */
    static toFunctionHandler(handler: cloud.IScheduleOnTickHandler): cloud.IFunctionHandler;
}
