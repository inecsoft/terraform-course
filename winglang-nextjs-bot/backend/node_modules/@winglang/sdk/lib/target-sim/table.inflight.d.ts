import { TableAttributes, TableSchema } from "./schema-resources";
import { ITableClient } from "../ex";
import { ISimulatorContext, ISimulatorResourceInstance, UpdatePlan } from "../simulator/simulator";
import { Json } from "../std";
export declare class Table implements ITableClient, ISimulatorResourceInstance {
    private name;
    private columns;
    private primaryKey;
    private table;
    private _context;
    private readonly initialRows;
    constructor(props: TableSchema);
    private get context();
    init(context: ISimulatorContext): Promise<TableAttributes>;
    cleanup(): Promise<void>;
    save(): Promise<void>;
    plan(): Promise<UpdatePlan>;
    insert(key: string, row: Json): Promise<void>;
    upsert(key: string, row: Json): Promise<void>;
    update(key: string, row: Json): Promise<void>;
    delete(key: string): Promise<void>;
    get(key: string): Promise<Json>;
    tryGet(key: string): Promise<Json | undefined>;
    list(): Promise<Array<Json>>;
}
