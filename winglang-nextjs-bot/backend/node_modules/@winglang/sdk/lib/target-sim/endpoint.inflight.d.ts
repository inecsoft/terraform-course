import { EndpointAttributes, EndpointSchema } from "./schema-resources";
import { IEndpointClient } from "../cloud";
import { ISimulatorContext, ISimulatorResourceInstance, UpdatePlan } from "../simulator";
export type EndpointExposeStatus = "connected" | "disconnected" | "connecting";
export declare class Endpoint implements IEndpointClient, ISimulatorResourceInstance {
    private readonly _props;
    private connectResponse?;
    private lastSubdomain?;
    private status;
    private _context;
    constructor(_props: EndpointSchema);
    private get context();
    init(context: ISimulatorContext): Promise<EndpointAttributes>;
    cleanup(): Promise<void>;
    save(): Promise<void>;
    plan(): Promise<UpdatePlan>;
    expose(): Promise<void>;
    hide(): Promise<void>;
    exposeStatus(): Promise<EndpointExposeStatus>;
    private loadState;
    private saveState;
    private connect;
}
