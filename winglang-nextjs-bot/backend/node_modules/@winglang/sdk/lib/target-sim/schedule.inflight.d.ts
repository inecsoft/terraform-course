import { IEventPublisher } from "./event-mapping";
import { EventSubscription, ScheduleAttributes, ScheduleSchema } from "./schema-resources";
import { IScheduleClient } from "../cloud";
import { ISimulatorContext, ISimulatorResourceInstance, UpdatePlan } from "../simulator";
export declare class Schedule implements IScheduleClient, ISimulatorResourceInstance, IEventPublisher {
    private _context;
    private tasks;
    private interval;
    private intervalTimeout?;
    constructor(props: ScheduleSchema);
    private get context();
    private nextDelay;
    private scheduleFunction;
    init(context: ISimulatorContext): Promise<ScheduleAttributes>;
    cleanup(): Promise<void>;
    save(): Promise<void>;
    plan(): Promise<UpdatePlan>;
    addEventSubscription(subscriber: string, subscriptionProps: EventSubscription): Promise<void>;
    removeEventSubscription(subscriber: string): Promise<void>;
    private runTasks;
}
