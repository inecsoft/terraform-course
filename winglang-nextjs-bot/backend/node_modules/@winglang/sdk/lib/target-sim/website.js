"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Website = void 0;
const tokens_1 = require("./tokens");
const util_1 = require("./util");
const cloud = __importStar(require("../cloud"));
const std_1 = require("../std");
/**
 * A static website.
 */
class Website extends cloud.Website {
    constructor(scope, id, props) {
        super(scope, id, props);
        this.fileRoutes = {};
        this.endpoint = new cloud.Endpoint(this, "Endpoint", (0, tokens_1.simulatorAttrToken)(this, "url"), { label: `Website ${this.node.path}`, browserSupport: true });
        std_1.Node.of(this.endpoint).hidden = true;
        this.errorDocument = props.errorDocument;
    }
    get _endpoint() {
        return this.endpoint;
    }
    /** Adds a file to the website during deployment */
    addFile(path, data, options) {
        this.fileRoutes[path] = {
            data,
            contentType: options?.contentType ?? "text/plain",
        };
        return `${this.url}/${path}`;
    }
    /** Returns sim schema */
    toSimulator() {
        const props = {
            staticFilesPath: this.path,
            fileRoutes: this.fileRoutes,
            errorDocument: this.errorDocument,
        };
        return {
            type: cloud.WEBSITE_FQN,
            props,
        };
    }
    onLift(host, ops) {
        (0, util_1.bindSimulatorResource)(__filename, this, host, ops);
        super.onLift(host, ops);
    }
    /** @internal */
    _toInflight() {
        return (0, util_1.makeSimulatorJsClient)(__filename, this);
    }
}
exports.Website = Website;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vic2l0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90YXJnZXQtc2ltL3dlYnNpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQSxxQ0FBOEM7QUFDOUMsaUNBQXNFO0FBQ3RFLGdEQUFrQztBQUVsQyxnQ0FBNkM7QUFFN0M7O0dBRUc7QUFDSCxNQUFhLE9BQVEsU0FBUSxLQUFLLENBQUMsT0FBTztJQUt4QyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQXlCO1FBQ2pFLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBTGxCLGVBQVUsR0FBZSxFQUFFLENBQUM7UUFPbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQ2hDLElBQUksRUFDSixVQUFVLEVBQ1YsSUFBQSwyQkFBa0IsRUFBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQy9CLEVBQUUsS0FBSyxFQUFFLFdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLENBQzdELENBQUM7UUFFRixVQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBRXJDLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztJQUMzQyxDQUFDO0lBRUQsSUFBYyxTQUFTO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsbURBQW1EO0lBQzVDLE9BQU8sQ0FDWixJQUFZLEVBQ1osSUFBWSxFQUNaLE9BQThCO1FBRTlCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUc7WUFDdEIsSUFBSTtZQUNKLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxJQUFJLFlBQVk7U0FDbEQsQ0FBQztRQUVGLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCx5QkFBeUI7SUFDbEIsV0FBVztRQUNoQixNQUFNLEtBQUssR0FBa0I7WUFDM0IsZUFBZSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQzFCLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtZQUMzQixhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWE7U0FDbEMsQ0FBQztRQUNGLE9BQU87WUFDTCxJQUFJLEVBQUUsS0FBSyxDQUFDLFdBQVc7WUFDdkIsS0FBSztTQUNOLENBQUM7SUFDSixDQUFDO0lBRU0sTUFBTSxDQUFDLElBQW1CLEVBQUUsR0FBYTtRQUM5QyxJQUFBLDRCQUFxQixFQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ25ELEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCxnQkFBZ0I7SUFDVCxXQUFXO1FBQ2hCLE9BQU8sSUFBQSw0QkFBcUIsRUFBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQztDQUNGO0FBNURELDBCQTREQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gXCJjb25zdHJ1Y3RzXCI7XG5pbXBvcnQgeyBJU2ltdWxhdG9yUmVzb3VyY2UgfSBmcm9tIFwiLi9yZXNvdXJjZVwiO1xuaW1wb3J0IHsgV2Vic2l0ZVNjaGVtYSwgRmlsZVJvdXRlcyB9IGZyb20gXCIuL3NjaGVtYS1yZXNvdXJjZXNcIjtcbmltcG9ydCB7IHNpbXVsYXRvckF0dHJUb2tlbiB9IGZyb20gXCIuL3Rva2Vuc1wiO1xuaW1wb3J0IHsgYmluZFNpbXVsYXRvclJlc291cmNlLCBtYWtlU2ltdWxhdG9ySnNDbGllbnQgfSBmcm9tIFwiLi91dGlsXCI7XG5pbXBvcnQgKiBhcyBjbG91ZCBmcm9tIFwiLi4vY2xvdWRcIjtcbmltcG9ydCB7IFRvU2ltdWxhdG9yT3V0cHV0IH0gZnJvbSBcIi4uL3NpbXVsYXRvclwiO1xuaW1wb3J0IHsgSUluZmxpZ2h0SG9zdCwgTm9kZSB9IGZyb20gXCIuLi9zdGRcIjtcblxuLyoqXG4gKiBBIHN0YXRpYyB3ZWJzaXRlLlxuICovXG5leHBvcnQgY2xhc3MgV2Vic2l0ZSBleHRlbmRzIGNsb3VkLldlYnNpdGUgaW1wbGVtZW50cyBJU2ltdWxhdG9yUmVzb3VyY2Uge1xuICBwcml2YXRlIGZpbGVSb3V0ZXM6IEZpbGVSb3V0ZXMgPSB7fTtcbiAgcHJpdmF0ZSByZWFkb25seSBlbmRwb2ludDogY2xvdWQuRW5kcG9pbnQ7XG4gIHByaXZhdGUgcmVhZG9ubHkgZXJyb3JEb2N1bWVudD86IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogY2xvdWQuV2Vic2l0ZVByb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG5cbiAgICB0aGlzLmVuZHBvaW50ID0gbmV3IGNsb3VkLkVuZHBvaW50KFxuICAgICAgdGhpcyxcbiAgICAgIFwiRW5kcG9pbnRcIixcbiAgICAgIHNpbXVsYXRvckF0dHJUb2tlbih0aGlzLCBcInVybFwiKSxcbiAgICAgIHsgbGFiZWw6IGBXZWJzaXRlICR7dGhpcy5ub2RlLnBhdGh9YCwgYnJvd3NlclN1cHBvcnQ6IHRydWUgfVxuICAgICk7XG5cbiAgICBOb2RlLm9mKHRoaXMuZW5kcG9pbnQpLmhpZGRlbiA9IHRydWU7XG5cbiAgICB0aGlzLmVycm9yRG9jdW1lbnQgPSBwcm9wcy5lcnJvckRvY3VtZW50O1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldCBfZW5kcG9pbnQoKTogY2xvdWQuRW5kcG9pbnQge1xuICAgIHJldHVybiB0aGlzLmVuZHBvaW50O1xuICB9XG5cbiAgLyoqIEFkZHMgYSBmaWxlIHRvIHRoZSB3ZWJzaXRlIGR1cmluZyBkZXBsb3ltZW50ICovXG4gIHB1YmxpYyBhZGRGaWxlKFxuICAgIHBhdGg6IHN0cmluZyxcbiAgICBkYXRhOiBzdHJpbmcsXG4gICAgb3B0aW9ucz86IGNsb3VkLkFkZEZpbGVPcHRpb25zXG4gICk6IHN0cmluZyB7XG4gICAgdGhpcy5maWxlUm91dGVzW3BhdGhdID0ge1xuICAgICAgZGF0YSxcbiAgICAgIGNvbnRlbnRUeXBlOiBvcHRpb25zPy5jb250ZW50VHlwZSA/PyBcInRleHQvcGxhaW5cIixcbiAgICB9O1xuXG4gICAgcmV0dXJuIGAke3RoaXMudXJsfS8ke3BhdGh9YDtcbiAgfVxuXG4gIC8qKiBSZXR1cm5zIHNpbSBzY2hlbWEgKi9cbiAgcHVibGljIHRvU2ltdWxhdG9yKCk6IFRvU2ltdWxhdG9yT3V0cHV0IHtcbiAgICBjb25zdCBwcm9wczogV2Vic2l0ZVNjaGVtYSA9IHtcbiAgICAgIHN0YXRpY0ZpbGVzUGF0aDogdGhpcy5wYXRoLFxuICAgICAgZmlsZVJvdXRlczogdGhpcy5maWxlUm91dGVzLFxuICAgICAgZXJyb3JEb2N1bWVudDogdGhpcy5lcnJvckRvY3VtZW50LFxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IGNsb3VkLldFQlNJVEVfRlFOLFxuICAgICAgcHJvcHMsXG4gICAgfTtcbiAgfVxuXG4gIHB1YmxpYyBvbkxpZnQoaG9zdDogSUluZmxpZ2h0SG9zdCwgb3BzOiBzdHJpbmdbXSk6IHZvaWQge1xuICAgIGJpbmRTaW11bGF0b3JSZXNvdXJjZShfX2ZpbGVuYW1lLCB0aGlzLCBob3N0LCBvcHMpO1xuICAgIHN1cGVyLm9uTGlmdChob3N0LCBvcHMpO1xuICB9XG5cbiAgLyoqIEBpbnRlcm5hbCAqL1xuICBwdWJsaWMgX3RvSW5mbGlnaHQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gbWFrZVNpbXVsYXRvckpzQ2xpZW50KF9fZmlsZW5hbWUsIHRoaXMpO1xuICB9XG59XG4iXX0=