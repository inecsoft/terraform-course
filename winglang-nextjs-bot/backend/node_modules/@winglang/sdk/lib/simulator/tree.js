"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tree = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * Tree metadata associated with a Wing application. Provides information
 * about resources and their relationships.
 */
class Tree {
    constructor(data) {
        this.data = data;
    }
    /**
     * Returns the raw tree data.
     */
    rawData() {
        return structuredClone(this.data);
    }
    /**
     * Returns the raw data for a specific construct node.
     */
    rawDataForNode(path) {
        const parts = path.split("/");
        parts.shift();
        let curr = this.rawData().tree;
        for (const part of parts) {
            const next = curr.children?.[part];
            if (!next) {
                return undefined;
            }
            curr = next;
        }
        return curr;
    }
}
exports.Tree = Tree;
_a = JSII_RTTI_SYMBOL_1;
Tree[_a] = { fqn: "@winglang/sdk.simulator.Tree", version: "0.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaW11bGF0b3IvdHJlZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBOzs7R0FHRztBQUNILE1BQWEsSUFBSTtJQUNmLFlBQTJCLElBQW1CO1FBQW5CLFNBQUksR0FBSixJQUFJLENBQWU7SUFBRyxDQUFDO0lBRWxEOztPQUVHO0lBQ0ksT0FBTztRQUNaLE9BQU8sZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxjQUFjLENBQUMsSUFBWTtRQUNoQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNkLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDL0IsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUUsQ0FBQztZQUN6QixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNWLE9BQU8sU0FBUyxDQUFDO1lBQ25CLENBQUM7WUFDRCxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7QUF6Qkgsb0JBMEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3RydWN0VHJlZSwgQ29uc3RydWN0VHJlZU5vZGUgfSBmcm9tIFwiLi4vY29yZVwiO1xuXG4vKipcbiAqIFRyZWUgbWV0YWRhdGEgYXNzb2NpYXRlZCB3aXRoIGEgV2luZyBhcHBsaWNhdGlvbi4gUHJvdmlkZXMgaW5mb3JtYXRpb25cbiAqIGFib3V0IHJlc291cmNlcyBhbmQgdGhlaXIgcmVsYXRpb25zaGlwcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFRyZWUge1xuICBwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRhOiBDb25zdHJ1Y3RUcmVlKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSByYXcgdHJlZSBkYXRhLlxuICAgKi9cbiAgcHVibGljIHJhd0RhdGEoKTogQ29uc3RydWN0VHJlZSB7XG4gICAgcmV0dXJuIHN0cnVjdHVyZWRDbG9uZSh0aGlzLmRhdGEpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHJhdyBkYXRhIGZvciBhIHNwZWNpZmljIGNvbnN0cnVjdCBub2RlLlxuICAgKi9cbiAgcHVibGljIHJhd0RhdGFGb3JOb2RlKHBhdGg6IHN0cmluZyk6IENvbnN0cnVjdFRyZWVOb2RlIHwgdW5kZWZpbmVkIHtcbiAgICBjb25zdCBwYXJ0cyA9IHBhdGguc3BsaXQoXCIvXCIpO1xuICAgIHBhcnRzLnNoaWZ0KCk7XG4gICAgbGV0IGN1cnIgPSB0aGlzLnJhd0RhdGEoKS50cmVlO1xuICAgIGZvciAoY29uc3QgcGFydCBvZiBwYXJ0cykge1xuICAgICAgY29uc3QgbmV4dCA9IGN1cnIuY2hpbGRyZW4/LltwYXJ0XTtcbiAgICAgIGlmICghbmV4dCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgY3VyciA9IG5leHQ7XG4gICAgfVxuICAgIHJldHVybiBjdXJyO1xuICB9XG59XG4iXX0=