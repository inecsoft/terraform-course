"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecretClient = void 0;
const client_secrets_manager_1 = require("@aws-sdk/client-secrets-manager");
class SecretClient {
    constructor(secretArn, client = new client_secrets_manager_1.SecretsManagerClient({})) {
        this.secretArn = secretArn;
        this.client = client;
    }
    async value(options = {}) {
        if ((options.cache ?? true) && this.secretValue) {
            return this.secretValue;
        }
        const command = new client_secrets_manager_1.GetSecretValueCommand({
            SecretId: this.secretArn,
        });
        const getSecretValue = await this.client.send(command);
        if (!getSecretValue.SecretString) {
            throw new Error(`No value for secret found\n(hint: try running the 'wing secrets -t TARGET' to store secret)`);
        }
        this.secretValue = getSecretValue.SecretString;
        return this.secretValue;
    }
    async valueJson(options = {}) {
        return JSON.parse(await this.value(options));
    }
}
exports.SecretClient = SecretClient;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjcmV0LmluZmxpZ2h0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NoYXJlZC1hd3Mvc2VjcmV0LmluZmxpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDRFQUd5QztBQUl6QyxNQUFhLFlBQVk7SUFHdkIsWUFDbUIsU0FBaUIsRUFDakIsU0FBK0IsSUFBSSw2Q0FBb0IsQ0FBQyxFQUFFLENBQUM7UUFEM0QsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUNqQixXQUFNLEdBQU4sTUFBTSxDQUFxRDtJQUMzRSxDQUFDO0lBRUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFpQyxFQUFFO1FBQ3BELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNoRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDMUIsQ0FBQztRQUVELE1BQU0sT0FBTyxHQUFHLElBQUksOENBQXFCLENBQUM7WUFDeEMsUUFBUSxFQUFFLElBQUksQ0FBQyxTQUFTO1NBQ3pCLENBQUMsQ0FBQztRQUNILE1BQU0sY0FBYyxHQUFHLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNqQyxNQUFNLElBQUksS0FBSyxDQUNiLDZGQUE2RixDQUM5RixDQUFDO1FBQ0osQ0FBQztRQUVELElBQUksQ0FBQyxXQUFXLEdBQUcsY0FBYyxDQUFDLFlBQVksQ0FBQztRQUUvQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLEtBQUssQ0FBQyxTQUFTLENBQUMsVUFBaUMsRUFBRTtRQUN4RCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNGO0FBL0JELG9DQStCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFNlY3JldHNNYW5hZ2VyQ2xpZW50LFxuICBHZXRTZWNyZXRWYWx1ZUNvbW1hbmQsXG59IGZyb20gXCJAYXdzLXNkay9jbGllbnQtc2VjcmV0cy1tYW5hZ2VyXCI7XG5pbXBvcnQgeyBHZXRTZWNyZXRWYWx1ZU9wdGlvbnMsIElTZWNyZXRDbGllbnQgfSBmcm9tIFwiLi4vY2xvdWRcIjtcbmltcG9ydCB7IEpzb24gfSBmcm9tIFwiLi4vc3RkXCI7XG5cbmV4cG9ydCBjbGFzcyBTZWNyZXRDbGllbnQgaW1wbGVtZW50cyBJU2VjcmV0Q2xpZW50IHtcbiAgcHJpdmF0ZSBzZWNyZXRWYWx1ZT86IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNlY3JldEFybjogc3RyaW5nLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgY2xpZW50OiBTZWNyZXRzTWFuYWdlckNsaWVudCA9IG5ldyBTZWNyZXRzTWFuYWdlckNsaWVudCh7fSlcbiAgKSB7fVxuXG4gIHB1YmxpYyBhc3luYyB2YWx1ZShvcHRpb25zOiBHZXRTZWNyZXRWYWx1ZU9wdGlvbnMgPSB7fSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgaWYgKChvcHRpb25zLmNhY2hlID8/IHRydWUpICYmIHRoaXMuc2VjcmV0VmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLnNlY3JldFZhbHVlO1xuICAgIH1cblxuICAgIGNvbnN0IGNvbW1hbmQgPSBuZXcgR2V0U2VjcmV0VmFsdWVDb21tYW5kKHtcbiAgICAgIFNlY3JldElkOiB0aGlzLnNlY3JldEFybixcbiAgICB9KTtcbiAgICBjb25zdCBnZXRTZWNyZXRWYWx1ZSA9IGF3YWl0IHRoaXMuY2xpZW50LnNlbmQoY29tbWFuZCk7XG4gICAgaWYgKCFnZXRTZWNyZXRWYWx1ZS5TZWNyZXRTdHJpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYE5vIHZhbHVlIGZvciBzZWNyZXQgZm91bmRcXG4oaGludDogdHJ5IHJ1bm5pbmcgdGhlICd3aW5nIHNlY3JldHMgLXQgVEFSR0VUJyB0byBzdG9yZSBzZWNyZXQpYFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLnNlY3JldFZhbHVlID0gZ2V0U2VjcmV0VmFsdWUuU2VjcmV0U3RyaW5nO1xuXG4gICAgcmV0dXJuIHRoaXMuc2VjcmV0VmFsdWU7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgdmFsdWVKc29uKG9wdGlvbnM6IEdldFNlY3JldFZhbHVlT3B0aW9ucyA9IHt9KTogUHJvbWlzZTxKc29uPiB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoYXdhaXQgdGhpcy52YWx1ZShvcHRpb25zKSk7XG4gIH1cbn1cbiJdfQ==