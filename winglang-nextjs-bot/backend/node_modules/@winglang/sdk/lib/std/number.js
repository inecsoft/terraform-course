"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Number = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const json_schema_1 = require("./json_schema");
const core_1 = require("../core");
/**
 * Number
 * @wingType num
 */
class Number {
    /**
     * Parse a number from Json.
     *
     * @param json to parse number from.
     * @returns a number.
     */
    static fromJson(json, options) {
        const schema = json_schema_1.JsonSchema._createJsonSchema({
            $id: "num",
            type: "number",
        });
        schema.validate(json, options);
        return json;
    }
    /**
     * Parse a number from string.
     *
     * @macro ((args) => { if (isNaN(args)) {throw new Error("unable to parse \"" + args + "\" as a number")}; return Number(args) })($args$)
     *
     * @param str to parse number from.
     * @returns a number.
     */
    static fromStr(str) {
        str;
        throw new Error("Macro");
    }
    /**
     * @internal
     */
    static _toInflightType() {
        return core_1.InflightClient.forType(__filename, this.name);
    }
    constructor() { }
}
exports.Number = Number;
_a = JSII_RTTI_SYMBOL_1;
Number[_a] = { fqn: "@winglang/sdk.std.Number", version: "0.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0ZC9udW1iZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSwrQ0FBMkM7QUFDM0Msa0NBQXlDO0FBRXpDOzs7R0FHRztBQUNILE1BQWEsTUFBTTtJQUNqQjs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBVSxFQUFFLE9BQStCO1FBQ2hFLE1BQU0sTUFBTSxHQUFHLHdCQUFVLENBQUMsaUJBQWlCLENBQUM7WUFDMUMsR0FBRyxFQUFFLEtBQUs7WUFDVixJQUFJLEVBQUUsUUFBUTtTQUNSLENBQUMsQ0FBQztRQUNWLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQy9CLE9BQU8sSUFBVyxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFXO1FBQy9CLEdBQUcsQ0FBQztRQUNKLE1BQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLGVBQWU7UUFDM0IsT0FBTyxxQkFBYyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxnQkFBdUIsQ0FBQzs7QUFwQzFCLHdCQXFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb24sIEpzb25WYWxpZGF0aW9uT3B0aW9ucyB9IGZyb20gXCIuL2pzb25cIjtcbmltcG9ydCB7IEpzb25TY2hlbWEgfSBmcm9tIFwiLi9qc29uX3NjaGVtYVwiO1xuaW1wb3J0IHsgSW5mbGlnaHRDbGllbnQgfSBmcm9tIFwiLi4vY29yZVwiO1xuXG4vKipcbiAqIE51bWJlclxuICogQHdpbmdUeXBlIG51bVxuICovXG5leHBvcnQgY2xhc3MgTnVtYmVyIHtcbiAgLyoqXG4gICAqIFBhcnNlIGEgbnVtYmVyIGZyb20gSnNvbi5cbiAgICpcbiAgICogQHBhcmFtIGpzb24gdG8gcGFyc2UgbnVtYmVyIGZyb20uXG4gICAqIEByZXR1cm5zIGEgbnVtYmVyLlxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBmcm9tSnNvbihqc29uOiBKc29uLCBvcHRpb25zPzogSnNvblZhbGlkYXRpb25PcHRpb25zKTogbnVtYmVyIHtcbiAgICBjb25zdCBzY2hlbWEgPSBKc29uU2NoZW1hLl9jcmVhdGVKc29uU2NoZW1hKHtcbiAgICAgICRpZDogXCJudW1cIixcbiAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgfSBhcyBhbnkpO1xuICAgIHNjaGVtYS52YWxpZGF0ZShqc29uLCBvcHRpb25zKTtcbiAgICByZXR1cm4ganNvbiBhcyBhbnk7XG4gIH1cblxuICAvKipcbiAgICogUGFyc2UgYSBudW1iZXIgZnJvbSBzdHJpbmcuXG4gICAqXG4gICAqIEBtYWNybyAoKGFyZ3MpID0+IHsgaWYgKGlzTmFOKGFyZ3MpKSB7dGhyb3cgbmV3IEVycm9yKFwidW5hYmxlIHRvIHBhcnNlIFxcXCJcIiArIGFyZ3MgKyBcIlxcXCIgYXMgYSBudW1iZXJcIil9OyByZXR1cm4gTnVtYmVyKGFyZ3MpIH0pKCRhcmdzJClcbiAgICpcbiAgICogQHBhcmFtIHN0ciB0byBwYXJzZSBudW1iZXIgZnJvbS5cbiAgICogQHJldHVybnMgYSBudW1iZXIuXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGZyb21TdHIoc3RyOiBzdHJpbmcpOiBudW1iZXIge1xuICAgIHN0cjtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJNYWNyb1wiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgX3RvSW5mbGlnaHRUeXBlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIEluZmxpZ2h0Q2xpZW50LmZvclR5cGUoX19maWxlbmFtZSwgdGhpcy5uYW1lKTtcbiAgfVxuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7fVxufVxuIl19