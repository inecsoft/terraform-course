"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateRow = void 0;
const ex_1 = require("../ex");
function validateRow(row, columns) {
    for (const [key, value] of Object.entries(row)) {
        if (!columns.hasOwnProperty(key)) {
            throw new Error(`"${key}" is not a valid column in the table.`);
        }
        switch (columns[key]) {
            case ex_1.ColumnType.STRING:
            case ex_1.ColumnType.DATE:
                if (typeof value !== "string") {
                    throw new Error(`"${key}" value is not a valid string.`);
                }
                break;
            case ex_1.ColumnType.NUMBER:
                if (typeof value !== "number") {
                    throw new Error(`"${key}" value is not a valid number.`);
                }
                break;
            case ex_1.ColumnType.BOOLEAN:
                if (typeof value !== "boolean") {
                    throw new Error(`"${key}" value is not a valid bool.`);
                }
                break;
            case ex_1.ColumnType.JSON:
                if (typeof value !== "object") {
                    throw new Error(`"${key}" value is not a valid json.`);
                }
                break;
        }
    }
}
exports.validateRow = validateRow;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtdXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2hhcmVkL3RhYmxlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhCQUFtQztBQUduQyxTQUFnQixXQUFXLENBQUMsR0FBUyxFQUFFLE9BQXNDO0lBQzNFLEtBQUssTUFBTSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNqQyxNQUFNLElBQUksS0FBSyxDQUFDLElBQUksR0FBRyx1Q0FBdUMsQ0FBQyxDQUFDO1FBQ2xFLENBQUM7UUFDRCxRQUFRLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3JCLEtBQUssZUFBVSxDQUFDLE1BQU0sQ0FBQztZQUN2QixLQUFLLGVBQVUsQ0FBQyxJQUFJO2dCQUNsQixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRSxDQUFDO29CQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksR0FBRyxnQ0FBZ0MsQ0FBQyxDQUFDO2dCQUMzRCxDQUFDO2dCQUNELE1BQU07WUFDUixLQUFLLGVBQVUsQ0FBQyxNQUFNO2dCQUNwQixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRSxDQUFDO29CQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksR0FBRyxnQ0FBZ0MsQ0FBQyxDQUFDO2dCQUMzRCxDQUFDO2dCQUNELE1BQU07WUFDUixLQUFLLGVBQVUsQ0FBQyxPQUFPO2dCQUNyQixJQUFJLE9BQU8sS0FBSyxLQUFLLFNBQVMsRUFBRSxDQUFDO29CQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksR0FBRyw4QkFBOEIsQ0FBQyxDQUFDO2dCQUN6RCxDQUFDO2dCQUNELE1BQU07WUFDUixLQUFLLGVBQVUsQ0FBQyxJQUFJO2dCQUNsQixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRSxDQUFDO29CQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksR0FBRyw4QkFBOEIsQ0FBQyxDQUFDO2dCQUN6RCxDQUFDO2dCQUNELE1BQU07UUFDVixDQUFDO0lBQ0gsQ0FBQztBQUNILENBQUM7QUE3QkQsa0NBNkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sdW1uVHlwZSB9IGZyb20gXCIuLi9leFwiO1xuaW1wb3J0IHsgSnNvbiB9IGZyb20gXCIuLi9zdGRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUm93KHJvdzogSnNvbiwgY29sdW1uczogeyBba2V5OiBzdHJpbmddOiBDb2x1bW5UeXBlIH0pIHtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocm93KSkge1xuICAgIGlmICghY29sdW1ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFwiJHtrZXl9XCIgaXMgbm90IGEgdmFsaWQgY29sdW1uIGluIHRoZSB0YWJsZS5gKTtcbiAgICB9XG4gICAgc3dpdGNoIChjb2x1bW5zW2tleV0pIHtcbiAgICAgIGNhc2UgQ29sdW1uVHlwZS5TVFJJTkc6XG4gICAgICBjYXNlIENvbHVtblR5cGUuREFURTpcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgXCIke2tleX1cIiB2YWx1ZSBpcyBub3QgYSB2YWxpZCBzdHJpbmcuYCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIENvbHVtblR5cGUuTlVNQkVSOlxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBcIiR7a2V5fVwiIHZhbHVlIGlzIG5vdCBhIHZhbGlkIG51bWJlci5gKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQ29sdW1uVHlwZS5CT09MRUFOOlxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgXCIke2tleX1cIiB2YWx1ZSBpcyBub3QgYSB2YWxpZCBib29sLmApO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBDb2x1bW5UeXBlLkpTT046XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFwiJHtrZXl9XCIgdmFsdWUgaXMgbm90IGEgdmFsaWQganNvbi5gKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cbiJdfQ==