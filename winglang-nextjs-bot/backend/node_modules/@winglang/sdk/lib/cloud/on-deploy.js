"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnDeploy = exports.ON_DEPLOY_FQN = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const constants_1 = require("../constants");
const types_1 = require("../core/types");
const std_1 = require("../std");
/**
 * Global identifier for `OnDeploy`.
 */
exports.ON_DEPLOY_FQN = (0, constants_1.fqnForType)("cloud.OnDeploy");
/**
 * Run code every time the app is deployed.
 *
 * @inflight `@winglang/sdk.cloud.IOnDeployClient`
 * @abstract
 */
class OnDeploy extends std_1.Resource {
    constructor(scope, id, handler, props = {}) {
        if (new.target === OnDeploy) {
            return std_1.Resource._newFromFactory(exports.ON_DEPLOY_FQN, scope, id, handler, props);
        }
        super(scope, id);
        std_1.Node.of(this).title = "OnDeploy";
        std_1.Node.of(this).description = "Run code during the app's deployment.";
        handler;
        props;
    }
}
exports.OnDeploy = OnDeploy;
_a = JSII_RTTI_SYMBOL_1;
OnDeploy[_a] = { fqn: "@winglang/sdk.cloud.OnDeploy", version: "0.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tZGVwbG95LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Nsb3VkL29uLWRlcGxveS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLDRDQUEwQztBQUMxQyx5Q0FBZ0Q7QUFDaEQsZ0NBQW1EO0FBRW5EOztHQUVHO0FBQ1UsUUFBQSxhQUFhLEdBQUcsSUFBQSxzQkFBVSxFQUFDLGdCQUFnQixDQUFDLENBQUM7QUFtQjFEOzs7OztHQUtHO0FBQ0gsTUFBYSxRQUFTLFNBQVEsY0FBUTtJQUlwQyxZQUNFLEtBQWdCLEVBQ2hCLEVBQVUsRUFDVixPQUF5QixFQUN6QixRQUF1QixFQUFFO1FBRXpCLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUM1QixPQUFPLGNBQVEsQ0FBQyxlQUFlLENBQUMscUJBQWEsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM1RSxDQUFDO1FBRUQsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVqQixVQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUM7UUFDakMsVUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEdBQUcsdUNBQXVDLENBQUM7UUFFcEUsT0FBTyxDQUFDO1FBQ1IsS0FBSyxDQUFDO0lBQ1IsQ0FBQzs7QUFyQkgsNEJBc0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCB7IEZ1bmN0aW9uUHJvcHMgfSBmcm9tIFwiLi9mdW5jdGlvblwiO1xuaW1wb3J0IHsgZnFuRm9yVHlwZSB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IElORkxJR0hUX1NZTUJPTCB9IGZyb20gXCIuLi9jb3JlL3R5cGVzXCI7XG5pbXBvcnQgeyBJSW5mbGlnaHQsIE5vZGUsIFJlc291cmNlIH0gZnJvbSBcIi4uL3N0ZFwiO1xuXG4vKipcbiAqIEdsb2JhbCBpZGVudGlmaWVyIGZvciBgT25EZXBsb3lgLlxuICovXG5leHBvcnQgY29uc3QgT05fREVQTE9ZX0ZRTiA9IGZxbkZvclR5cGUoXCJjbG91ZC5PbkRlcGxveVwiKTtcblxuLyoqXG4gKiBPcHRpb25zIGZvciBgT25EZXBsb3lgLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIE9uRGVwbG95UHJvcHMgZXh0ZW5kcyBGdW5jdGlvblByb3BzIHtcbiAgLyoqXG4gICAqIEV4ZWN1dGUgdGhpcyB0cmlnZ2VyIG9ubHkgYWZ0ZXIgdGhlc2UgcmVzb3VyY2VzIGhhdmUgYmVlbiBwcm92aXNpb25lZC5cbiAgICogQGRlZmF1bHQgLSBubyBhZGRpdGlvbmFsIGRlcGVuZGVuY2llc1xuICAgKi9cbiAgcmVhZG9ubHkgZXhlY3V0ZUFmdGVyPzogQ29uc3RydWN0W107XG5cbiAgLyoqXG4gICAqIEFkZHMgdGhpcyB0cmlnZ2VyIGFzIGEgZGVwZW5kZW5jeSBvbiBvdGhlciBjb25zdHJ1Y3RzLlxuICAgKiBAZGVmYXVsdCAtIG5vIGFkZGl0aW9uYWwgZGVwZW5kZW5jaWVzXG4gICAqL1xuICByZWFkb25seSBleGVjdXRlQmVmb3JlPzogQ29uc3RydWN0W107XG59XG5cbi8qKlxuICogUnVuIGNvZGUgZXZlcnkgdGltZSB0aGUgYXBwIGlzIGRlcGxveWVkLlxuICpcbiAqIEBpbmZsaWdodCBgQHdpbmdsYW5nL3Nkay5jbG91ZC5JT25EZXBsb3lDbGllbnRgXG4gKiBAYWJzdHJhY3RcbiAqL1xuZXhwb3J0IGNsYXNzIE9uRGVwbG95IGV4dGVuZHMgUmVzb3VyY2Uge1xuICAvKiogQGludGVybmFsICovXG4gIHB1YmxpYyBbSU5GTElHSFRfU1lNQk9MXT86IElPbkRlcGxveUNsaWVudDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBzY29wZTogQ29uc3RydWN0LFxuICAgIGlkOiBzdHJpbmcsXG4gICAgaGFuZGxlcjogSU9uRGVwbG95SGFuZGxlcixcbiAgICBwcm9wczogT25EZXBsb3lQcm9wcyA9IHt9XG4gICkge1xuICAgIGlmIChuZXcudGFyZ2V0ID09PSBPbkRlcGxveSkge1xuICAgICAgcmV0dXJuIFJlc291cmNlLl9uZXdGcm9tRmFjdG9yeShPTl9ERVBMT1lfRlFOLCBzY29wZSwgaWQsIGhhbmRsZXIsIHByb3BzKTtcbiAgICB9XG5cbiAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgTm9kZS5vZih0aGlzKS50aXRsZSA9IFwiT25EZXBsb3lcIjtcbiAgICBOb2RlLm9mKHRoaXMpLmRlc2NyaXB0aW9uID0gXCJSdW4gY29kZSBkdXJpbmcgdGhlIGFwcCdzIGRlcGxveW1lbnQuXCI7XG5cbiAgICBoYW5kbGVyO1xuICAgIHByb3BzO1xuICB9XG59XG5cbi8qKlxuICogQSByZXNvdXJjZSB3aXRoIGFuIGluZmxpZ2h0IFwiaGFuZGxlXCIgbWV0aG9kIHRoYXQgY2FuIGJlIHVzZWQgYnkgYGNsb3VkLk9uRGVwbG95YC5cbiAqXG4gKiBAaW5mbGlnaHQgYEB3aW5nbGFuZy9zZGsuY2xvdWQuSU9uRGVwbG95SGFuZGxlckNsaWVudGBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJT25EZXBsb3lIYW5kbGVyIGV4dGVuZHMgSUluZmxpZ2h0IHtcbiAgLyoqIEBpbnRlcm5hbCAqL1xuICBbSU5GTElHSFRfU1lNQk9MXT86IElPbkRlcGxveUhhbmRsZXJDbGllbnRbXCJoYW5kbGVcIl07XG59XG5cbi8qKlxuICogSW5mbGlnaHQgY2xpZW50IGZvciBgSU9uRGVwbG95SGFuZGxlcmAuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSU9uRGVwbG95SGFuZGxlckNsaWVudCB7XG4gIC8qKlxuICAgKiBFbnRyeXBvaW50IGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgYXBwIGlzIGRlcGxveWVkLlxuICAgKiBAaW5mbGlnaHRcbiAgICovXG4gIGhhbmRsZSgpOiBQcm9taXNlPHZvaWQ+O1xufVxuXG4vKipcbiAqIEluZmxpZ2h0IGludGVyZmFjZSBmb3IgYE9uRGVwbG95YC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJT25EZXBsb3lDbGllbnQge31cbiJdfQ==