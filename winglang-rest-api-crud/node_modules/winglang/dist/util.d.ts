export declare const DEFAULT_PARALLEL_SIZE = 10;
/**
 * Normalize windows paths to be posix-like.
 */
export declare function normalPath(path: string): string;
export declare function withSpinner<T>(message: string, fn: () => Promise<T>): Promise<T>;
/**
 * Execute a command and return its stdout.
 */
export declare function exec(command: string): Promise<string>;
/**
 * Creates a clean environment for each test by copying the example file to a temporary directory.
 */
export declare function generateTmpDir(): Promise<string>;
/**
 * Casts a numeric string to a number.
 *
 * Returns `undefined` if the string is empty.
 *
 * @throws If the string is not a number.
 */
export declare function parseNumericString(text?: string): number | undefined;
export declare const currentPackage: {
    name: string;
    version: string;
    engines: {
        node: string;
    };
};
export declare const PROJECT_TEMPLATES_DIR: string;
export declare function projectTemplateNames(): string[];
export declare function flattenObject(item: any, parentKey?: string): Record<string, unknown>;
