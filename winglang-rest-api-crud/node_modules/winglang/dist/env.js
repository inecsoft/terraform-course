"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadEnvVariables = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = require("path");
const dotenv_1 = require("dotenv");
const dotenv_expand_1 = require("dotenv-expand");
const DEFAULT_ENV_FILES = [`.env`, `.env.local`];
/**
 * Loads environment variables from `.env` and `.env.local` files.
 */
function loadEnvVariables(options) {
    const envDir = options?.cwd ?? process.cwd();
    const envFiles = DEFAULT_ENV_FILES.map((file) => (0, path_1.join)(envDir, file));
    // Parse `envFiles` and combine their variables into a single object
    const parsed = Object.fromEntries(envFiles.flatMap((file) => {
        try {
            return Object.entries((0, dotenv_1.parse)(fs_1.default.readFileSync(file)));
        }
        catch (_) {
            return [];
        }
    }));
    // Expand and force load the environment variables
    const expandedEnvVariables = (0, dotenv_expand_1.expand)({ parsed, ignoreProcessEnv: true });
    if (expandedEnvVariables.parsed) {
        for (const [key, value] of Object.entries(expandedEnvVariables.parsed)) {
            process.env[key] = value;
        }
    }
    return expandedEnvVariables.parsed;
}
exports.loadEnvVariables = loadEnvVariables;
//# sourceMappingURL=env.js.map