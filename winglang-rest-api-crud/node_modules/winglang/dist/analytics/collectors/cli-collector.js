"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CLICollector = void 0;
const path_1 = require("path");
const compiler_1 = require("@winglang/compiler");
const collector_1 = require("./collector");
const cli_1 = require("../../cli");
const util_1 = require("../../util");
class CLICollector extends collector_1.Collector {
    cmd;
    constructor(cmd) {
        super();
        this.cmd = cmd;
    }
    async collect() {
        const platform = this.cmd.opts().platform ?? [];
        return {
            platform: platform.map((p) => (0, path_1.basename)(p)).join(","), // only report the platform name, not the full path
            target: (0, compiler_1.determineTargetFromPlatforms)(platform),
            version: cli_1.PACKAGE_VERSION,
            wing_sdk_version: this.tryGetModuleVersion("@winglang/sdk/package.json"),
            wing_console_version: this.tryGetModuleVersion(`@wingconsole/app/package.json`),
            ...(0, util_1.flattenObject)({ options: this.cmd.opts() }),
        };
    }
    tryGetModuleVersion(module) {
        try {
            // eslint-disable-next-line @typescript-eslint/no-require-imports
            return require(module).version;
        }
        catch (error) {
            return undefined;
        }
    }
}
exports.CLICollector = CLICollector;
//# sourceMappingURL=cli-collector.js.map