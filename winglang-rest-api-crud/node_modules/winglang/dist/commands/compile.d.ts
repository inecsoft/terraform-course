/**
 * Compile options for the `compile` command.
 * This is passed from Commander to the `compile` function.
 */
export interface CompileOptions {
    /**
     * Target platform
     * @default wingCompiler.BuiltinPlatform.SIM
     */
    readonly platform: string[];
    /**
     * App root id
     *
     * @default "Default"
     */
    readonly rootId?: string;
    /**
     * String with platform-specific values separated by commas
     */
    readonly value?: string;
    /**
     * Path to the file with specific platform values (TOML|YAML|JSON)
     *
     * example of the file's content:
     * root/Default/Domain:
     *   hostedZoneId: Z0111111111111111111F
     *   acmCertificateArn: arn:aws:acm:us-east-1:111111111111:certificate/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
     */
    readonly values?: string;
    /**
     * The location to save the compilation output
     * @default "./target"
     */
    readonly targetDir?: string;
    /**
     * The overrides the location to save the compilation output
     * @default "./target/<entrypoint>.<target>"
     */
    readonly output?: string;
    /**
     * Whether to run the compiler in `wing test` mode. This may create multiple
     * copies of the application resources in order to run tests in parallel.
     */
    readonly testing?: boolean;
}
/**
 * Compiles a Wing program. Throws an error if compilation fails.
 * @param entrypoint The program .w entrypoint.
 * @param options Compile options.
 * @returns the output directory
 */
export declare function compile(entrypoint?: string, options?: CompileOptions): Promise<string>;
