import { ElastiCacheServiceException as __BaseException } from "./ElastiCacheServiceException";
export class CacheClusterNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheClusterNotFoundFault.prototype);
    }
}
export class CacheParameterGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheParameterGroupNotFoundFault.prototype);
    }
}
export class CacheSecurityGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSecurityGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSecurityGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSecurityGroupNotFoundFault.prototype);
    }
}
export class CacheSubnetGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSubnetGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSubnetGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSubnetGroupNotFoundFault.prototype);
    }
}
export class InvalidARNFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidARNFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidARNFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidARNFault.prototype);
    }
}
export class InvalidReplicationGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidReplicationGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidReplicationGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidReplicationGroupStateFault.prototype);
    }
}
export class InvalidServerlessCacheSnapshotStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidServerlessCacheSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidServerlessCacheSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidServerlessCacheSnapshotStateFault.prototype);
    }
}
export class InvalidServerlessCacheStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidServerlessCacheStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidServerlessCacheStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidServerlessCacheStateFault.prototype);
    }
}
export class ReplicationGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReplicationGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReplicationGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReplicationGroupNotFoundFault.prototype);
    }
}
export class ReservedCacheNodeNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedCacheNodeNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedCacheNodeNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedCacheNodeNotFoundFault.prototype);
    }
}
export class ServerlessCacheNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerlessCacheNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServerlessCacheNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServerlessCacheNotFoundFault.prototype);
    }
}
export class ServerlessCacheSnapshotNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerlessCacheSnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServerlessCacheSnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServerlessCacheSnapshotNotFoundFault.prototype);
    }
}
export class SnapshotNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotNotFoundFault.prototype);
    }
}
export class TagQuotaPerResourceExceeded extends __BaseException {
    constructor(opts) {
        super({
            name: "TagQuotaPerResourceExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "TagQuotaPerResourceExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagQuotaPerResourceExceeded.prototype);
    }
}
export class UserGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserGroupNotFoundFault.prototype);
    }
}
export class UserNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserNotFoundFault.prototype);
    }
}
export class AuthorizationAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "AuthorizationAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationAlreadyExistsFault.prototype);
    }
}
export class InvalidCacheSecurityGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCacheSecurityGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCacheSecurityGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCacheSecurityGroupStateFault.prototype);
    }
}
export class InvalidParameterCombinationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterCombinationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterCombinationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterCombinationException.prototype);
    }
}
export class InvalidParameterValueException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterValueException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);
    }
}
export class ServiceUpdateNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUpdateNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceUpdateNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceUpdateNotFoundFault.prototype);
    }
}
export const UpdateActionStatus = {
    COMPLETE: "complete",
    IN_PROGRESS: "in-progress",
    NOT_APPLICABLE: "not-applicable",
    NOT_APPLIED: "not-applied",
    SCHEDULED: "scheduled",
    SCHEDULING: "scheduling",
    STOPPED: "stopped",
    STOPPING: "stopping",
    WAITING_TO_START: "waiting-to-start",
};
export const AutomaticFailoverStatus = {
    DISABLED: "disabled",
    DISABLING: "disabling",
    ENABLED: "enabled",
    ENABLING: "enabling",
};
export const ClusterMode = {
    COMPATIBLE: "compatible",
    DISABLED: "disabled",
    ENABLED: "enabled",
};
export const DataTieringStatus = {
    DISABLED: "disabled",
    ENABLED: "enabled",
};
export const IpDiscovery = {
    IPV4: "ipv4",
    IPV6: "ipv6",
};
export const DestinationType = {
    CloudWatchLogs: "cloudwatch-logs",
    KinesisFirehose: "kinesis-firehose",
};
export const LogFormat = {
    JSON: "json",
    TEXT: "text",
};
export const LogType = {
    ENGINE_LOG: "engine-log",
    SLOW_LOG: "slow-log",
};
export const LogDeliveryConfigurationStatus = {
    ACTIVE: "active",
    DISABLING: "disabling",
    ENABLING: "enabling",
    ERROR: "error",
    MODIFYING: "modifying",
};
export const MultiAZStatus = {
    DISABLED: "disabled",
    ENABLED: "enabled",
};
export const NetworkType = {
    DUAL_STACK: "dual_stack",
    IPV4: "ipv4",
    IPV6: "ipv6",
};
export const AuthTokenUpdateStatus = {
    ROTATING: "ROTATING",
    SETTING: "SETTING",
};
export const PendingAutomaticFailoverStatus = {
    DISABLED: "disabled",
    ENABLED: "enabled",
};
export const TransitEncryptionMode = {
    PREFERRED: "preferred",
    REQUIRED: "required",
};
export class ReplicationGroupNotUnderMigrationFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReplicationGroupNotUnderMigrationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReplicationGroupNotUnderMigrationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReplicationGroupNotUnderMigrationFault.prototype);
    }
}
export class ServerlessCacheSnapshotAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerlessCacheSnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServerlessCacheSnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServerlessCacheSnapshotAlreadyExistsFault.prototype);
    }
}
export class ServerlessCacheSnapshotQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerlessCacheSnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServerlessCacheSnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServerlessCacheSnapshotQuotaExceededFault.prototype);
    }
}
export class ServiceLinkedRoleNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceLinkedRoleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceLinkedRoleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceLinkedRoleNotFoundFault.prototype);
    }
}
export class InvalidSnapshotStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSnapshotStateFault.prototype);
    }
}
export class SnapshotAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotAlreadyExistsFault.prototype);
    }
}
export class SnapshotQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotQuotaExceededFault.prototype);
    }
}
export class CacheClusterAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheClusterAlreadyExistsFault.prototype);
    }
}
export class ClusterQuotaForCustomerExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterQuotaForCustomerExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterQuotaForCustomerExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterQuotaForCustomerExceededFault.prototype);
    }
}
export const AZMode = {
    CROSS_AZ: "cross-az",
    SINGLE_AZ: "single-az",
};
export const OutpostMode = {
    CROSS_OUTPOST: "cross-outpost",
    SINGLE_OUTPOST: "single-outpost",
};
export class InsufficientCacheClusterCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientCacheClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientCacheClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientCacheClusterCapacityFault.prototype);
    }
}
export class InvalidVPCNetworkStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidVPCNetworkStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidVPCNetworkStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidVPCNetworkStateFault.prototype);
    }
}
export class NodeQuotaForClusterExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NodeQuotaForClusterExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NodeQuotaForClusterExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NodeQuotaForClusterExceededFault.prototype);
    }
}
export class NodeQuotaForCustomerExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NodeQuotaForCustomerExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NodeQuotaForCustomerExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NodeQuotaForCustomerExceededFault.prototype);
    }
}
export class CacheParameterGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheParameterGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheParameterGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheParameterGroupAlreadyExistsFault.prototype);
    }
}
export class CacheParameterGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheParameterGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheParameterGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheParameterGroupQuotaExceededFault.prototype);
    }
}
export class InvalidCacheParameterGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCacheParameterGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCacheParameterGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCacheParameterGroupStateFault.prototype);
    }
}
export class CacheSecurityGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSecurityGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSecurityGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSecurityGroupAlreadyExistsFault.prototype);
    }
}
export class CacheSecurityGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSecurityGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSecurityGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSecurityGroupQuotaExceededFault.prototype);
    }
}
export class CacheSubnetGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSubnetGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSubnetGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSubnetGroupAlreadyExistsFault.prototype);
    }
}
export class CacheSubnetGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSubnetGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSubnetGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSubnetGroupQuotaExceededFault.prototype);
    }
}
export class CacheSubnetQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSubnetQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSubnetQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSubnetQuotaExceededFault.prototype);
    }
}
export class InvalidSubnet extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSubnet",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubnet";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubnet.prototype);
    }
}
export class SubnetNotAllowedFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetNotAllowedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetNotAllowedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetNotAllowedFault.prototype);
    }
}
export class GlobalReplicationGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "GlobalReplicationGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalReplicationGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalReplicationGroupAlreadyExistsFault.prototype);
    }
}
export class GlobalReplicationGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "GlobalReplicationGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalReplicationGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalReplicationGroupNotFoundFault.prototype);
    }
}
export class InvalidCacheClusterStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCacheClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCacheClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCacheClusterStateFault.prototype);
    }
}
export class InvalidGlobalReplicationGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidGlobalReplicationGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidGlobalReplicationGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidGlobalReplicationGroupStateFault.prototype);
    }
}
export class InvalidUserGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidUserGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUserGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUserGroupStateFault.prototype);
    }
}
export class NodeGroupsPerReplicationGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NodeGroupsPerReplicationGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NodeGroupsPerReplicationGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NodeGroupsPerReplicationGroupQuotaExceededFault.prototype);
    }
}
export class ReplicationGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReplicationGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReplicationGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReplicationGroupAlreadyExistsFault.prototype);
    }
}
export const DataStorageUnit = {
    GB: "GB",
};
export class InvalidCredentialsException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCredentialsException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCredentialsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCredentialsException.prototype);
    }
}
export class ServerlessCacheAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerlessCacheAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServerlessCacheAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServerlessCacheAlreadyExistsFault.prototype);
    }
}
export class ServerlessCacheQuotaForCustomerExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerlessCacheQuotaForCustomerExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServerlessCacheQuotaForCustomerExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServerlessCacheQuotaForCustomerExceededFault.prototype);
    }
}
export class SnapshotFeatureNotSupportedFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotFeatureNotSupportedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotFeatureNotSupportedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotFeatureNotSupportedFault.prototype);
    }
}
export const InputAuthenticationType = {
    IAM: "iam",
    NO_PASSWORD: "no-password-required",
    PASSWORD: "password",
};
export class DuplicateUserNameFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateUserNameFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateUserNameFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateUserNameFault.prototype);
    }
}
export const AuthenticationType = {
    IAM: "iam",
    NO_PASSWORD: "no-password",
    PASSWORD: "password",
};
export class UserAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserAlreadyExistsFault.prototype);
    }
}
export class UserQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserQuotaExceededFault.prototype);
    }
}
export class DefaultUserRequired extends __BaseException {
    constructor(opts) {
        super({
            name: "DefaultUserRequired",
            $fault: "client",
            ...opts,
        });
        this.name = "DefaultUserRequired";
        this.$fault = "client";
        Object.setPrototypeOf(this, DefaultUserRequired.prototype);
    }
}
export class UserGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserGroupAlreadyExistsFault.prototype);
    }
}
export class UserGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserGroupQuotaExceededFault.prototype);
    }
}
export class NoOperationFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NoOperationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NoOperationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoOperationFault.prototype);
    }
}
export class CacheSubnetGroupInUse extends __BaseException {
    constructor(opts) {
        super({
            name: "CacheSubnetGroupInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "CacheSubnetGroupInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, CacheSubnetGroupInUse.prototype);
    }
}
export class DefaultUserAssociatedToUserGroupFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DefaultUserAssociatedToUserGroupFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DefaultUserAssociatedToUserGroupFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DefaultUserAssociatedToUserGroupFault.prototype);
    }
}
export class InvalidUserStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidUserStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUserStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUserStateFault.prototype);
    }
}
export const ChangeType = {
    immediate: "immediate",
    requires_reboot: "requires-reboot",
};
export const SourceType = {
    cache_cluster: "cache-cluster",
    cache_parameter_group: "cache-parameter-group",
    cache_security_group: "cache-security-group",
    cache_subnet_group: "cache-subnet-group",
    replication_group: "replication-group",
    serverless_cache: "serverless-cache",
    serverless_cache_snapshot: "serverless-cache-snapshot",
    user: "user",
    user_group: "user-group",
};
export class ReservedCacheNodesOfferingNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedCacheNodesOfferingNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedCacheNodesOfferingNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedCacheNodesOfferingNotFoundFault.prototype);
    }
}
export const ServiceUpdateStatus = {
    AVAILABLE: "available",
    CANCELLED: "cancelled",
    EXPIRED: "expired",
};
export const ServiceUpdateSeverity = {
    CRITICAL: "critical",
    IMPORTANT: "important",
    LOW: "low",
    MEDIUM: "medium",
};
export const ServiceUpdateType = {
    SECURITY_UPDATE: "security-update",
};
export const NodeUpdateInitiatedBy = {
    CUSTOMER: "customer",
    SYSTEM: "system",
};
export const NodeUpdateStatus = {
    COMPLETE: "complete",
    IN_PROGRESS: "in-progress",
    NOT_APPLIED: "not-applied",
    STOPPED: "stopped",
    STOPPING: "stopping",
    WAITING_TO_START: "waiting-to-start",
};
export const SlaMet = {
    NA: "n/a",
    NO: "no",
    YES: "yes",
};
export class InvalidKMSKeyFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidKMSKeyFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidKMSKeyFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidKMSKeyFault.prototype);
    }
}
export const AuthTokenUpdateStrategyType = {
    DELETE: "DELETE",
    ROTATE: "ROTATE",
    SET: "SET",
};
export class SubnetInUse extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetInUse.prototype);
    }
}
export class ReservedCacheNodeAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedCacheNodeAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedCacheNodeAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedCacheNodeAlreadyExistsFault.prototype);
    }
}
export class ReservedCacheNodeQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedCacheNodeQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedCacheNodeQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedCacheNodeQuotaExceededFault.prototype);
    }
}
export class TagNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "TagNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "TagNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagNotFoundFault.prototype);
    }
}
export class AuthorizationNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "AuthorizationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationNotFoundFault.prototype);
    }
}
