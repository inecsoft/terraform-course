import { Construct } from "constructs";
import { VisualComponent } from "./base";
import { UIComponent } from "../core";
import { IInflight } from "../std";
/**
 * Global identifier for `Button`.
 */
export declare const BUTTON_FQN: string;
/**
 * A button can be used to perform an action.
 * @noinflight
 */
export declare class Button extends VisualComponent {
    /**
     * Creates a new ui.Button instance through the app.
     * @internal
     */
    static _newButton(scope: Construct, id: string, label: string, handler: IButtonHandler): Button;
    private readonly fn;
    private readonly label;
    constructor(scope: Construct, id: string, label: string, handler: IButtonHandler);
    /** @internal */
    _toUIComponent(): UIComponent;
    /** @internal */
    _toInflight(): string;
}
/**
 * A resource with an inflight "handle" method that can be passed to
 * `Button`.
 *
 * @inflight `@winglang/sdk.ui.IButtonHandlerClient`
 */
export interface IButtonHandler extends IInflight {
}
/**
 * Inflight client for `IButtonHandler`.
 */
export interface IButtonHandlerClient {
    /**
     * Function that peforms an action.
     * @inflight
     */
    handle(): Promise<void>;
}
