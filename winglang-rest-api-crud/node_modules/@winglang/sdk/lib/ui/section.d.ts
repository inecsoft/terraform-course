import { Construct } from "constructs";
import { VisualComponent } from "./base";
import { IButtonHandler } from "./button";
import { FieldProps, IFieldHandler } from "./field";
import { UIComponent } from "../core";
/**
 * Global identifier for `Section`.
 */
export declare const SECTION_FQN: string;
/**
 * Props for `Section`.
 */
export interface SectionProps {
    /**
     * The label of the section.
     * @default - no label
     */
    readonly label?: string;
}
/**
 * A section can be used to group other visual components.
 * @noinflight
 */
export declare class Section extends VisualComponent {
    /**
     * Creates a new ui.Section instance through the app.
     * @internal
     */
    static _newSection(scope: Construct, id: string, props?: SectionProps): Section;
    private readonly label;
    private readonly subcomponents;
    private buttonIdx;
    private fieldIdx;
    constructor(scope: Construct, id: string, props?: SectionProps);
    /**
     * Adds a visual component to the section. The components
     * will be rendered in the order they were added.
     */
    add(...components: Array<VisualComponent>): void;
    /**
     * Adds a button to the section. Shorthand for `add(new ui.Button(...))`.
     */
    addButton(label: string, handler: IButtonHandler): void;
    /**
     * Adds a field to the section. Shorthand for `add(new ui.Field(...))`.
     */
    addField(label: string, handler: IFieldHandler, props?: FieldProps): void;
    /** @internal */
    _toUIComponent(): UIComponent;
    /** @internal */
    _toInflight(): string;
}
