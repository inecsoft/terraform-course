"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Domain = void 0;
const util_1 = require("./util");
const cloud = __importStar(require("../cloud"));
/**
 * Simulator implementation of `cloud.Domain`
 */
class Domain extends cloud.Domain {
    constructor(scope, id, props) {
        super(scope, id, props);
    }
    /**
     * @internal
     */
    _toInflight() {
        return (0, util_1.makeSimulatorJsClient)(__filename, this);
    }
    toSimulator() {
        const props = {};
        return {
            type: cloud.DOMAIN_FQN,
            props,
        };
    }
}
exports.Domain = Domain;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tYWluLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RhcmdldC1zaW0vZG9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsaUNBQStDO0FBQy9DLGdEQUFrQztBQUdsQzs7R0FFRztBQUNILE1BQWEsTUFBTyxTQUFRLEtBQUssQ0FBQyxNQUFNO0lBQ3RDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBd0I7UUFDaEUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksV0FBVztRQUNoQixPQUFPLElBQUEsNEJBQXFCLEVBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFTSxXQUFXO1FBQ2hCLE1BQU0sS0FBSyxHQUFpQixFQUFFLENBQUM7UUFDL0IsT0FBTztZQUNMLElBQUksRUFBRSxLQUFLLENBQUMsVUFBVTtZQUN0QixLQUFLO1NBQ04sQ0FBQztJQUNKLENBQUM7Q0FDRjtBQW5CRCx3QkFtQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tIFwiY29uc3RydWN0c1wiO1xuaW1wb3J0IHsgRG9tYWluU2NoZW1hIH0gZnJvbSBcIi4vc2NoZW1hLXJlc291cmNlc1wiO1xuaW1wb3J0IHsgbWFrZVNpbXVsYXRvckpzQ2xpZW50IH0gZnJvbSBcIi4vdXRpbFwiO1xuaW1wb3J0ICogYXMgY2xvdWQgZnJvbSBcIi4uL2Nsb3VkXCI7XG5pbXBvcnQgeyBUb1NpbXVsYXRvck91dHB1dCB9IGZyb20gXCIuLi9zaW11bGF0b3JcIjtcblxuLyoqXG4gKiBTaW11bGF0b3IgaW1wbGVtZW50YXRpb24gb2YgYGNsb3VkLkRvbWFpbmBcbiAqL1xuZXhwb3J0IGNsYXNzIERvbWFpbiBleHRlbmRzIGNsb3VkLkRvbWFpbiB7XG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBjbG91ZC5Eb21haW5Qcm9wcykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgcHVibGljIF90b0luZmxpZ2h0KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIG1ha2VTaW11bGF0b3JKc0NsaWVudChfX2ZpbGVuYW1lLCB0aGlzKTtcbiAgfVxuXG4gIHB1YmxpYyB0b1NpbXVsYXRvcigpOiBUb1NpbXVsYXRvck91dHB1dCB7XG4gICAgY29uc3QgcHJvcHM6IERvbWFpblNjaGVtYSA9IHt9O1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBjbG91ZC5ET01BSU5fRlFOLFxuICAgICAgcHJvcHMsXG4gICAgfTtcbiAgfVxufVxuIl19