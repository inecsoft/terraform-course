import { FunctionAttributes, FunctionSchema } from "./schema-resources";
import { IFunctionClient } from "../cloud";
import { ISimulatorContext, ISimulatorResourceInstance, UpdatePlan } from "../simulator/simulator";
export declare class Function implements IFunctionClient, ISimulatorResourceInstance {
    private readonly sourceCodeFile;
    private originalFile;
    private bundle;
    private readonly env;
    private _context;
    private readonly timeout;
    private readonly maxWorkers;
    private readonly workers;
    private createBundlePromise;
    constructor(props: FunctionSchema);
    private get context();
    init(context: ISimulatorContext): Promise<FunctionAttributes>;
    cleanup(): Promise<void>;
    save(): Promise<void>;
    plan(invalidated: boolean): Promise<UpdatePlan>;
    invoke(payload: string): Promise<string>;
    invokeAsync(payload: string): Promise<void>;
    private createBundle;
    private ensureBundled;
    hasAvailableWorkers(): Promise<boolean>;
    private findAvailableWorker;
    private initWorker;
    private addTrace;
}
