import { IEventPublisher } from "./event-mapping";
import { ApiAttributes, ApiSchema, EventSubscription } from "./schema-resources";
import { IApiClient } from "../cloud";
import { ISimulatorContext, ISimulatorResourceInstance, UpdatePlan } from "../simulator/simulator";
export declare class Api implements IApiClient, ISimulatorResourceInstance, IEventPublisher {
    private readonly routes;
    private _context;
    private readonly app;
    private server;
    private url;
    private port;
    constructor(props: ApiSchema);
    private get context();
    init(context: ISimulatorContext): Promise<ApiAttributes>;
    cleanup(): Promise<void>;
    save(): Promise<void>;
    plan(): Promise<UpdatePlan>;
    private loadState;
    private saveState;
    addEventSubscription(subscriber: string, subscriptionProps: EventSubscription): Promise<void>;
    removeEventSubscription(subscriber: string): Promise<void>;
    private populateRoute;
    private addTrace;
}
