import { Construct } from "constructs";
import { ISimulatorResource } from "./resource";
import { LiftMap } from "../core";
import { ToSimulatorOutput } from "../simulator";
import { IResource, Resource } from "../std";
export declare const POLICY_FQN: string;
/**
 * Options for `sim.Policy`.
 */
export interface PolicyProps {
    /**
     * The resource to which the policy is attached.
     */
    readonly principal: IResource;
}
/**
 * Implementation of `sim.Policy`.
 *
 * @inflight `@winglang/sdk.sim.IPolicyClient`
 */
export declare class Policy extends Resource implements ISimulatorResource {
    private readonly statements;
    private readonly principal;
    constructor(scope: Construct, id: string, props: PolicyProps);
    /** @internal */
    get _liftMap(): LiftMap;
    /**
     * Adds a statement to the policy.
     */
    addStatement(resource: IResource, op: string): void;
    toSimulator(): ToSimulatorOutput;
}
/**
 * Inflight interface for `Policy`.
 */
export interface IPolicyClient {
}
