import { Json, JsonValidationOptions } from "./json";
/**
 * Struct Schema
 */
export declare class JsonSchema {
    /**
     * @internal
     */
    static _toInflightType(schema: Json): string;
    /**
     * Static method for creating a StructSchema used for lifting a struct to an inflight type
     *
     * @internal
     */
    static _createJsonSchema(schema: Json): JsonSchema;
    /** @internal */
    _rawSchema: any;
    private validator;
    constructor(schema: Json);
    /**
     * Attempt to validate a json object against the schema
     *
     * @param obj the Json object to validate
     * @throws an error if the json object is not valid
     */
    validate(obj: Json, options?: JsonValidationOptions): void;
    /**
     * Retrieve the json schema as a string
     *
     * @returns the schema as a string
     */
    asStr(): String;
    /** @internal */
    _fromJson(obj: Json, validateOptions?: JsonValidationOptions): any;
    /** @internal */
    _tryFromJson(obj: Json): any;
    /** @internal */
    _tryParseJson(json: string | undefined): any;
    /** @internal */
    _toInflightType(): string;
}
