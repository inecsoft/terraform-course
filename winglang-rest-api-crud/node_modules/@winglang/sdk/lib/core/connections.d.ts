import { IConstruct } from "constructs";
export declare const CONNECTIONS_FILE_PATH = "connections.json";
/**
 * Connections are a way to track relationships between constructs.
 */
export declare class Connections {
    /**
     * Return the matching Connections of the given construct tree.
     */
    static of(construct: IConstruct): Connections;
    private readonly _connections;
    private constructor();
    /**
     * Adds a connection between two constructs. A connection is a piece of
     * metadata describing how one construct is related to another construct.
     */
    add(props: AddConnectionProps): void;
    /**
     * Synthesize `connections.json` to the given directory.
     */
    synth(outdir: string): void;
}
/**
 * Props for `Connections.add`.
 */
export interface AddConnectionProps {
    /**
     * The source of the connection.
     */
    readonly source: IConstruct;
    /**
     * An operation that the source object supports.
     * @default - no operation
     */
    readonly sourceOp?: string;
    /**
     * The target of the connection.
     */
    readonly target: IConstruct;
    /**
     * An operation that the target object supports.
     * @default - no operation
     */
    readonly targetOp?: string;
    /**
     * A name for the connection.
     */
    readonly name: string;
}
/**
 * A connection to another construct.
 */
export interface Connection {
    /**
     * The source of the connection.
     */
    readonly source: IConstruct;
    /**
     * An operation that the source object supports.
     * @default - no operation
     */
    readonly sourceOp?: string;
    /**
     * The target of the connection.
     */
    readonly target: IConstruct;
    /**
     * An operation that the target object supports.
     * @default - no operation
     */
    readonly targetOp?: string;
    /**
     * A name for the connection.
     */
    readonly name: string;
}
