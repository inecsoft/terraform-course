"use strict";
// TODO: more robust serialization scheme
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserialize = exports.serialize = void 0;
const datetime_1 = require("../std/datetime");
function serialize(input) {
    return JSON.stringify(input, (_key, value) => {
        if (value instanceof datetime_1.Datetime) {
            return {
                $kind: "datetime",
                day: value.dayOfMonth,
                hour: value.hours,
                min: value.min,
                month: value.month,
                sec: value.sec,
                year: value.year,
                ms: value.ms,
                tz: value.timezone,
            };
        }
        return value;
    });
}
exports.serialize = serialize;
function deserialize(input) {
    return JSON.parse(input, (_key, value) => {
        // assumption: Wing APIs don't distinguish between null and undefined, so we can swap them
        if (value === null) {
            return undefined;
        }
        if (value.$kind === "datetime") {
            return datetime_1.Datetime.fromComponents({
                day: value.day,
                hour: value.hour,
                min: value.min,
                month: value.month,
                sec: value.sec,
                year: value.year,
                ms: value.ms,
                tz: value.tz,
            });
        }
        return value;
    });
}
exports.deserialize = deserialize;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsaXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaW11bGF0b3Ivc2VyaWFsaXphdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEseUNBQXlDOzs7QUFFekMsOENBQTJDO0FBRTNDLFNBQWdCLFNBQVMsQ0FBQyxLQUFVO0lBQ2xDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDM0MsSUFBSSxLQUFLLFlBQVksbUJBQVEsRUFBRSxDQUFDO1lBQzlCLE9BQU87Z0JBQ0wsS0FBSyxFQUFFLFVBQVU7Z0JBQ2pCLEdBQUcsRUFBRSxLQUFLLENBQUMsVUFBVTtnQkFDckIsSUFBSSxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNqQixHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUc7Z0JBQ2QsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNsQixHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUc7Z0JBQ2QsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO2dCQUNoQixFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQUU7Z0JBQ1osRUFBRSxFQUFFLEtBQUssQ0FBQyxRQUFRO2FBQ25CLENBQUM7UUFDSixDQUFDO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFqQkQsOEJBaUJDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLEtBQWE7SUFDdkMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUN2QywwRkFBMEY7UUFDMUYsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDbkIsT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQztRQUNELElBQUksS0FBSyxDQUFDLEtBQUssS0FBSyxVQUFVLEVBQUUsQ0FBQztZQUMvQixPQUFPLG1CQUFRLENBQUMsY0FBYyxDQUFDO2dCQUM3QixHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUc7Z0JBQ2QsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO2dCQUNoQixHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUc7Z0JBQ2QsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNsQixHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUc7Z0JBQ2QsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO2dCQUNoQixFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQUU7Z0JBQ1osRUFBRSxFQUFFLEtBQUssQ0FBQyxFQUFFO2FBQ2IsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBcEJELGtDQW9CQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE86IG1vcmUgcm9idXN0IHNlcmlhbGl6YXRpb24gc2NoZW1lXG5cbmltcG9ydCB7IERhdGV0aW1lIH0gZnJvbSBcIi4uL3N0ZC9kYXRldGltZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplKGlucHV0OiBhbnkpOiBzdHJpbmcge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoaW5wdXQsIChfa2V5LCB2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIERhdGV0aW1lKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAka2luZDogXCJkYXRldGltZVwiLFxuICAgICAgICBkYXk6IHZhbHVlLmRheU9mTW9udGgsXG4gICAgICAgIGhvdXI6IHZhbHVlLmhvdXJzLFxuICAgICAgICBtaW46IHZhbHVlLm1pbixcbiAgICAgICAgbW9udGg6IHZhbHVlLm1vbnRoLFxuICAgICAgICBzZWM6IHZhbHVlLnNlYyxcbiAgICAgICAgeWVhcjogdmFsdWUueWVhcixcbiAgICAgICAgbXM6IHZhbHVlLm1zLFxuICAgICAgICB0ejogdmFsdWUudGltZXpvbmUsXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVzZXJpYWxpemUoaW5wdXQ6IHN0cmluZyk6IGFueSB7XG4gIHJldHVybiBKU09OLnBhcnNlKGlucHV0LCAoX2tleSwgdmFsdWUpID0+IHtcbiAgICAvLyBhc3N1bXB0aW9uOiBXaW5nIEFQSXMgZG9uJ3QgZGlzdGluZ3Vpc2ggYmV0d2VlbiBudWxsIGFuZCB1bmRlZmluZWQsIHNvIHdlIGNhbiBzd2FwIHRoZW1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZS4ka2luZCA9PT0gXCJkYXRldGltZVwiKSB7XG4gICAgICByZXR1cm4gRGF0ZXRpbWUuZnJvbUNvbXBvbmVudHMoe1xuICAgICAgICBkYXk6IHZhbHVlLmRheSxcbiAgICAgICAgaG91cjogdmFsdWUuaG91cixcbiAgICAgICAgbWluOiB2YWx1ZS5taW4sXG4gICAgICAgIG1vbnRoOiB2YWx1ZS5tb250aCxcbiAgICAgICAgc2VjOiB2YWx1ZS5zZWMsXG4gICAgICAgIHllYXI6IHZhbHVlLnllYXIsXG4gICAgICAgIG1zOiB2YWx1ZS5tcyxcbiAgICAgICAgdHo6IHZhbHVlLnR6LFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbiAgfSk7XG59XG4iXX0=