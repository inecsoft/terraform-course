import { PolicyStatement } from "./simulator";
export interface Definition {
    path: string;
    deps?: string[];
    props?: Record<string, any>;
    policy?: PolicyStatement[];
}
declare class Node<T extends Definition> {
    readonly def: T;
    readonly dependencies: Set<string>;
    readonly dependents: Set<string>;
    constructor(def: T);
    get path(): string;
}
export declare class Graph<T extends Definition> {
    private byPath;
    constructor(resources?: T[]);
    get nodes(): Node<T>[];
    tryFind(path: string): Node<T> | undefined;
    private recordDependency;
    private detectCycles;
}
export {};
