"use strict";
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopicOnMessageHandler = exports.Topic = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const core_1 = require("../core");
/**
 * A helper class for working with AWS topics.
 */
class Topic {
    /**
     * If the topic is an AWS SNS, return a helper interface for
     * working with it.
     * @param topic The cloud.Topic.
     */
    static from(topic) {
        if (this.isAwsTopic(topic)) {
            return topic;
        }
        return undefined;
    }
    static isAwsTopic(obj) {
        return (typeof obj.topicArn === "string" && typeof obj.topicName === "string");
    }
}
exports.Topic = Topic;
_a = JSII_RTTI_SYMBOL_1;
Topic[_a] = { fqn: "@winglang/sdk.aws.Topic", version: "0.0.0" };
/**
 * A helper class for working with AWS topic on message handlers.
 */
class TopicOnMessageHandler {
    /**
     * Returns a `cloud.Function` handler for handling messages from a `cloud.Topic`.
     * @param handler The `onMessage` handler.
     * @returns The `cloud.Function` handler.
     */
    static toFunctionHandler(handler) {
        return (0, core_1.lift)({ handler }).inflight(async (ctx, event) => {
            for (const record of event.Records ?? []) {
                await ctx.handler(record.Sns.Message);
                return undefined;
            }
        });
    }
}
exports.TopicOnMessageHandler = TopicOnMessageHandler;
_b = JSII_RTTI_SYMBOL_1;
TopicOnMessageHandler[_b] = { fqn: "@winglang/sdk.aws.TopicOnMessageHandler", version: "0.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9waWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2hhcmVkLWF3cy90b3BpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLGtDQUErQjtBQWlCL0I7O0dBRUc7QUFDSCxNQUFhLEtBQUs7SUFDaEI7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBa0I7UUFDbkMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDM0IsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVPLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBUTtRQUNoQyxPQUFPLENBQ0wsT0FBTyxHQUFHLENBQUMsUUFBUSxLQUFLLFFBQVEsSUFBSSxPQUFPLEdBQUcsQ0FBQyxTQUFTLEtBQUssUUFBUSxDQUN0RSxDQUFDO0lBQ0osQ0FBQzs7QUFqQkgsc0JBa0JDOzs7QUFFRDs7R0FFRztBQUNILE1BQWEscUJBQXFCO0lBQ2hDOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsaUJBQWlCLENBQzdCLE9BQXFDO1FBRXJDLE9BQU8sSUFBQSxXQUFJLEVBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3JELEtBQUssTUFBTSxNQUFNLElBQUssS0FBYSxDQUFDLE9BQU8sSUFBSSxFQUFFLEVBQUUsQ0FBQztnQkFDbEQsTUFBTSxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ3RDLE9BQU8sU0FBUyxDQUFDO1lBQ25CLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7O0FBZkgsc0RBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xvdWQgfSBmcm9tIFwiLi5cIjtcbmltcG9ydCB7IGxpZnQgfSBmcm9tIFwiLi4vY29yZVwiO1xuXG4vKipcbiAqIEEgc2hhcmVkIGludGVyZmFjZSBmb3IgQVdTIHRvcGljcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJQXdzVG9waWMge1xuICAvKipcbiAgICogQVdTIFRvcGljIGFyblxuICAgKi9cbiAgcmVhZG9ubHkgdG9waWNBcm46IHN0cmluZztcblxuICAvKipcbiAgICogQVdTIFRvcGljIG5hbWVcbiAgICovXG4gIHJlYWRvbmx5IHRvcGljTmFtZTogc3RyaW5nO1xufVxuXG4vKipcbiAqIEEgaGVscGVyIGNsYXNzIGZvciB3b3JraW5nIHdpdGggQVdTIHRvcGljcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFRvcGljIHtcbiAgLyoqXG4gICAqIElmIHRoZSB0b3BpYyBpcyBhbiBBV1MgU05TLCByZXR1cm4gYSBoZWxwZXIgaW50ZXJmYWNlIGZvclxuICAgKiB3b3JraW5nIHdpdGggaXQuXG4gICAqIEBwYXJhbSB0b3BpYyBUaGUgY2xvdWQuVG9waWMuXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGZyb20odG9waWM6IGNsb3VkLlRvcGljKTogSUF3c1RvcGljIHwgdW5kZWZpbmVkIHtcbiAgICBpZiAodGhpcy5pc0F3c1RvcGljKHRvcGljKSkge1xuICAgICAgcmV0dXJuIHRvcGljO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgaXNBd3NUb3BpYyhvYmo6IGFueSk6IG9iaiBpcyBJQXdzVG9waWMge1xuICAgIHJldHVybiAoXG4gICAgICB0eXBlb2Ygb2JqLnRvcGljQXJuID09PSBcInN0cmluZ1wiICYmIHR5cGVvZiBvYmoudG9waWNOYW1lID09PSBcInN0cmluZ1wiXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIEEgaGVscGVyIGNsYXNzIGZvciB3b3JraW5nIHdpdGggQVdTIHRvcGljIG9uIG1lc3NhZ2UgaGFuZGxlcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBUb3BpY09uTWVzc2FnZUhhbmRsZXIge1xuICAvKipcbiAgICogUmV0dXJucyBhIGBjbG91ZC5GdW5jdGlvbmAgaGFuZGxlciBmb3IgaGFuZGxpbmcgbWVzc2FnZXMgZnJvbSBhIGBjbG91ZC5Ub3BpY2AuXG4gICAqIEBwYXJhbSBoYW5kbGVyIFRoZSBgb25NZXNzYWdlYCBoYW5kbGVyLlxuICAgKiBAcmV0dXJucyBUaGUgYGNsb3VkLkZ1bmN0aW9uYCBoYW5kbGVyLlxuICAgKi9cbiAgcHVibGljIHN0YXRpYyB0b0Z1bmN0aW9uSGFuZGxlcihcbiAgICBoYW5kbGVyOiBjbG91ZC5JVG9waWNPbk1lc3NhZ2VIYW5kbGVyXG4gICk6IGNsb3VkLklGdW5jdGlvbkhhbmRsZXIge1xuICAgIHJldHVybiBsaWZ0KHsgaGFuZGxlciB9KS5pbmZsaWdodChhc3luYyAoY3R4LCBldmVudCkgPT4ge1xuICAgICAgZm9yIChjb25zdCByZWNvcmQgb2YgKGV2ZW50IGFzIGFueSkuUmVjb3JkcyA/PyBbXSkge1xuICAgICAgICBhd2FpdCBjdHguaGFuZGxlcihyZWNvcmQuU25zLk1lc3NhZ2UpO1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=