"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoint = void 0;
const cdktf_1 = require("cdktf");
const __1 = require("..");
const cloud = __importStar(require("../cloud"));
const resource_names_1 = require("../shared/resource-names");
/**
 * AWS implementation of `cloud.Endpoint`.
 */
class Endpoint extends cloud.Endpoint {
    constructor(scope, id, url, props = {}) {
        super(scope, id, url, props);
        new cdktf_1.TerraformOutput(this, "Url", {
            value: this.url,
        });
    }
    /** @internal */
    onLift(host, ops) {
        host.addEnvironment(this.urlEnvName(), this.url);
        super.onLift(host, ops);
    }
    /** @internal */
    _toInflight() {
        return __1.core.InflightClient.for(__dirname.replace("target-tf-aws", "shared-aws"), __filename, "EndpointClient", [`process.env["${this.urlEnvName()}"]`]);
    }
    urlEnvName() {
        return resource_names_1.ResourceNames.generateName(this, {
            disallowedRegex: /[^a-zA-Z0-9_]/,
            sep: "_",
            case: resource_names_1.CaseConventions.UPPERCASE,
        });
    }
}
exports.Endpoint = Endpoint;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kcG9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdGFyZ2V0LXRmLWF3cy9lbmRwb2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlDQUF3QztBQUV4QywwQkFBMEI7QUFDMUIsZ0RBQWtDO0FBQ2xDLDZEQUEwRTtBQUcxRTs7R0FFRztBQUNILE1BQWEsUUFBUyxTQUFRLEtBQUssQ0FBQyxRQUFRO0lBQzFDLFlBQ0UsS0FBZ0IsRUFDaEIsRUFBVSxFQUNWLEdBQVcsRUFDWCxRQUE2QixFQUFFO1FBRS9CLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUU3QixJQUFJLHVCQUFlLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRTtZQUMvQixLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUc7U0FDaEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGdCQUFnQjtJQUNULE1BQU0sQ0FBQyxJQUFtQixFQUFFLEdBQWE7UUFDOUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCxnQkFBZ0I7SUFDVCxXQUFXO1FBQ2hCLE9BQU8sUUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQzVCLFNBQVMsQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQyxFQUNoRCxVQUFVLEVBQ1YsZ0JBQWdCLEVBQ2hCLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQ3hDLENBQUM7SUFDSixDQUFDO0lBRU8sVUFBVTtRQUNoQixPQUFPLDhCQUFhLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRTtZQUN0QyxlQUFlLEVBQUUsZUFBZTtZQUNoQyxHQUFHLEVBQUUsR0FBRztZQUNSLElBQUksRUFBRSxnQ0FBZSxDQUFDLFNBQVM7U0FDaEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBckNELDRCQXFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlcnJhZm9ybU91dHB1dCB9IGZyb20gXCJjZGt0ZlwiO1xuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCB7IGNvcmUgfSBmcm9tIFwiLi5cIjtcbmltcG9ydCAqIGFzIGNsb3VkIGZyb20gXCIuLi9jbG91ZFwiO1xuaW1wb3J0IHsgQ2FzZUNvbnZlbnRpb25zLCBSZXNvdXJjZU5hbWVzIH0gZnJvbSBcIi4uL3NoYXJlZC9yZXNvdXJjZS1uYW1lc1wiO1xuaW1wb3J0IHsgSUluZmxpZ2h0SG9zdCB9IGZyb20gXCIuLi9zdGRcIjtcblxuLyoqXG4gKiBBV1MgaW1wbGVtZW50YXRpb24gb2YgYGNsb3VkLkVuZHBvaW50YC5cbiAqL1xuZXhwb3J0IGNsYXNzIEVuZHBvaW50IGV4dGVuZHMgY2xvdWQuRW5kcG9pbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBzY29wZTogQ29uc3RydWN0LFxuICAgIGlkOiBzdHJpbmcsXG4gICAgdXJsOiBzdHJpbmcsXG4gICAgcHJvcHM6IGNsb3VkLkVuZHBvaW50UHJvcHMgPSB7fVxuICApIHtcbiAgICBzdXBlcihzY29wZSwgaWQsIHVybCwgcHJvcHMpO1xuXG4gICAgbmV3IFRlcnJhZm9ybU91dHB1dCh0aGlzLCBcIlVybFwiLCB7XG4gICAgICB2YWx1ZTogdGhpcy51cmwsXG4gICAgfSk7XG4gIH1cblxuICAvKiogQGludGVybmFsICovXG4gIHB1YmxpYyBvbkxpZnQoaG9zdDogSUluZmxpZ2h0SG9zdCwgb3BzOiBzdHJpbmdbXSk6IHZvaWQge1xuICAgIGhvc3QuYWRkRW52aXJvbm1lbnQodGhpcy51cmxFbnZOYW1lKCksIHRoaXMudXJsKTtcbiAgICBzdXBlci5vbkxpZnQoaG9zdCwgb3BzKTtcbiAgfVxuXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgcHVibGljIF90b0luZmxpZ2h0KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGNvcmUuSW5mbGlnaHRDbGllbnQuZm9yKFxuICAgICAgX19kaXJuYW1lLnJlcGxhY2UoXCJ0YXJnZXQtdGYtYXdzXCIsIFwic2hhcmVkLWF3c1wiKSxcbiAgICAgIF9fZmlsZW5hbWUsXG4gICAgICBcIkVuZHBvaW50Q2xpZW50XCIsXG4gICAgICBbYHByb2Nlc3MuZW52W1wiJHt0aGlzLnVybEVudk5hbWUoKX1cIl1gXVxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIHVybEVudk5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gUmVzb3VyY2VOYW1lcy5nZW5lcmF0ZU5hbWUodGhpcywge1xuICAgICAgZGlzYWxsb3dlZFJlZ2V4OiAvW15hLXpBLVowLTlfXS8sXG4gICAgICBzZXA6IFwiX1wiLFxuICAgICAgY2FzZTogQ2FzZUNvbnZlbnRpb25zLlVQUEVSQ0FTRSxcbiAgICB9KTtcbiAgfVxufVxuIl19