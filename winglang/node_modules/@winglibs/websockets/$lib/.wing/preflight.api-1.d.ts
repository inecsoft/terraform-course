import * as $internal from "@winglang/sdk/lib/core/types"
import { std } from "@winglang/sdk"
export interface IWebSocket extends std.IResource
{
  readonly onConnect: (handler: $internal.Inflight<(arg0: string) => Promise<void>>) => void;
  readonly onDisconnect: (handler: $internal.Inflight<(arg0: string) => Promise<void>>) => void;
  readonly onMessage: (handler: $internal.Inflight<(arg0: string, arg1: string) => Promise<void>>) => void;
}
export interface IWebSocket$Inflight extends std.IResource$Inflight
{
  readonly sendMessage: (connectionId: string, message: string) => Promise<void>;
}
export interface WebSocketProps {
  readonly name: string;
  readonly stageName?: (string) | undefined;
}