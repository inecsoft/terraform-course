{"version":3,"file":"cdk-serverless-app-pipeline-stack.js","sourceRoot":"","sources":["cdk-serverless-app-pipeline-stack.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAAmC;AACnC,iEAAmD;AAOnD,MAAa,aAAc,SAAQ,GAAG,CAAC,KAAK;IAC1B,QAAQ,CAAyB;IAEjD,YAAY,KAAgB,EAAE,EAAU,EAAE,KAAyB;QACjE,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAExB,MAAM,eAAe,GAAG,SAAS,CAAC,kBAAkB,CAAC,MAAM,CACzD,qCAAqC,EACrC,kBAAkB,EAClB;YACE,mBAAmB;YACnB,cAAc,EAAE,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC;SAC1D,CACF,CAAC;QAEF,MAAM,sBAAsB,GAAG,SAAS,CAAC,kBAAkB,CAAC,UAAU,CACpE,qCAAqC,EACrC,kBAAkB,EAClB;YACE,aAAa,EAAE,6BAA6B;SAC7C,CACF,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE;YAC3D,KAAK,EAAE,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE;gBACtC,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE;oBACR,QAAQ;oBACR,QAAQ;oBACR,cAAc;oBACd,YAAY;oBACZ,OAAO;oBACP,eAAe;iBAChB;aACF,CAAC;YAEF,sCAAsC;YACtC,iBAAiB,EAAE;gBACjB,qDAAqD;gBACrD,gBAAgB,EAAE,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;oBACvD,OAAO,EAAE,KAAK;oBACd,MAAM,EAAE;wBACN,OAAO,EAAE;4BACP,wDAAwD;4BACxD,4CAA4C;4BAC5C,6BAA6B;4BAC7B,oBAAoB;4BACpB,gBAAgB;4BAChB,cAAc;4BACd,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBACrC;qBACF;oBAED,MAAM;iBACP,CAAC;gBAEF,gCAAgC;gBAChC,gBAAgB,EAAE;oBAChB,WAAW,EAAE,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK;oBAChD,UAAU,EAAE,GAAG,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;oBAC1D,UAAU,EAAE,IAAI;iBACjB;gBACD,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;aAClC;YAED,gBAAgB,EAAE,IAAI;YACtB,qBAAqB,EAAE,IAAI;SAC5B,CAAC,CAAC;IACL,CAAC;CACF;AArED,sCAqEC","sourcesContent":["import * as cdk from 'aws-cdk-lib';\nimport * as pipelines from 'aws-cdk-lib/pipelines';\nimport { Construct } from 'constructs';\n\nexport interface PipelineStackProps extends cdk.StackProps {\n  name: string;\n}\n\nexport class PipelineStack extends cdk.Stack {\n  public readonly pipeline: pipelines.CodePipeline;\n\n  constructor(scope: Construct, id: string, props: PipelineStackProps) {\n    super(scope, id, props);\n\n    const sourcegithubpat = pipelines.CodePipelineSource.gitHub(\n      'inecsoft/cdk-serverless-application',\n      'oring-cdk-nextjs',\n      {\n        // This is optional\n        authentication: cdk.SecretValue.secretsManager('dev/pat'),\n      }\n    );\n\n    const sourcegithubconnection = pipelines.CodePipelineSource.connection(\n      'inecsoft/cdk-serverless-application',\n      'oring-cdk-nextjs',\n      {\n        connectionArn: 'REPLACE_WITH_CONNECTION_ARN',\n      }\n    );\n\n    this.pipeline = new pipelines.CodePipeline(this, 'Pipeline', {\n      synth: new pipelines.ShellStep('synth', {\n        input: sourcegithubpat,\n        commands: [\n          'npm ci',\n          'cd app',\n          'yarn install',\n          'yarn build',\n          'cd ..',\n          'npx cdk synth',\n        ],\n      }),\n\n      // Defaults for all CodeBuild projects\n      codeBuildDefaults: {\n        // Prepend commands and configuration to all projects\n        partialBuildSpec: cdk.aws_codebuild.BuildSpec.fromObject({\n          version: '0.2',\n          phases: {\n            install: {\n              // Add the shell commands to install your drop-in Docker\n              // replacement to the CodeBuild enviromment.\n              // commands: installCommands,\n              // runtime-versions:\n              //   python: 3.8\n              // nodejs: 18,\n              'runtime-versions': { nodejs: '18' },\n            },\n          },\n\n          // ...\n        }),\n\n        // Control the build environment\n        buildEnvironment: {\n          computeType: cdk.aws_codebuild.ComputeType.LARGE,\n          buildImage: cdk.aws_codebuild.LinuxBuildImage.STANDARD_7_0,\n          privileged: true,\n        },\n        timeout: cdk.Duration.minutes(10),\n      },\n\n      crossAccountKeys: true,\n      dockerEnabledForSynth: true,\n    });\n  }\n}\n"]}